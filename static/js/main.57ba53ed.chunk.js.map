{"version":3,"sources":["components/ContextMenu/index.js","Redux/ReducersFolder/notesReducer.js","Redux/ReducersFolder/folderReducer.js","components/FoldersList/folderItem.js","components/FoldersList/addFolderButton.js","components/Note/noteTime.js","components/Note/noteTextArea.js","components/Note/index.js","components/Modal/index.js","components/NotesList/notesItem.js","components/FoldersList/index.js","components/NotesList/index.js","components/Header/closingMenu.js","components/Header/buttonsBlock.js","components/Header/index.js","App.js","Redux/ReducersFolder/index.js","Redux/StoreFolder/store.js","index.js"],"names":["ContextMenu","props","theme","useTheme","widthLimit","useMediaQuery","breakpoints","up","name","folderId","addItem","deleteItem","clearId","menuStatus","setMenuStatus","changeInputStatus","handleClose","style","cursor","Menu","id","anchorEl","keepMounted","open","Boolean","onClose","MenuItem","onClick","undefined","ADD_NOTE","DELETE_NOTE","SET_NOTE_ID","EDIT_NOTE","initialState","notesList","JSON","parse","localStorage","getItem","noteId","addNote","activeFolderId","type","payload","editNote","status","value","typeOfChange","setNoteId","ADD_FOLDER","DELETE_FOLDER","SET_FOLDER_ID","EDIT_FOLDER","foldersList","setFolderId","useStyles","makeStyles","root","height","down","backgroundColor","inputStyle","display","color","connect","store","folder","notes","dispatch","addFolderAction","deleteFolderAction","editFolderAction","editFolder","setFolderIdAction","setNoteIdAction","addNoteAction","classes","itemId","itemName","itemStatus","useState","openContextMenu","event","currentTarget","className","ListItem","button","onDoubleClick","selected","index","ListItemText","primary","TextField","defaultValue","onChange","target","onBlur","InputProps","disableUnderline","disabled","autoFocus","Hidden","mdUp","IconButton","textTransform","fontWeight","width","justifyContent","paddingLeft","buttonStyle","Button","startIcon","timeStyle","marginTop","NoteTime","itemTime","textAreaStyle","border","resize","outline","editNoteAction","flexDirection","currentNoteValue","filter","item","Paper","variant","square","map","dateNote","noteValue","position","NotesModal","setOpen","Modal","Note","paddingRight","rootInput","notesFieldsPosition","alignItems","deleteNoteAction","itemDate","folderListWrapper","overflow","droppableId","isCombineEnabled","provided","List","component","droppableProps","ref","innerRef","folderItem","draggableId","isDragDisabled","draggableProps","dragHandleProps","inputStatus","NoteItem","date","placeholder","noteListWrapper","padding","notesInActiveFolder","snapshot","isDragging","borderRadius","margin","redButton","yellowButton","greenButton","ClosingMenu","marginLeft","boxShadow","folderListVisibility","setFolderListVisibility","fontSize","borderTopLeftRadius","borderTopRightRadius","Header","header","main","folderList","flex","note","onDragEnd","result","combine","smDown","rootReducer","combineReducers","state","action","newFolder","uid","setItem","stringify","changedFolderList","changeFolderList","newNote","moment","format","changedNoteList","changeNoteList","createStore","devToolsEnhancer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57ba53ed.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport default function ContextMenu(props) {\n  const theme = useTheme();\n  const widthLimit = useMediaQuery(theme.breakpoints.up(\"md\"));\n  const {\n    name,\n    folderId,\n    addItem,\n    deleteItem,\n    clearId,\n    menuStatus,\n    setMenuStatus,\n    changeInputStatus,\n  } = props;\n\n  // func for close context menu\n  const handleClose = () => {\n    setMenuStatus(null);\n  };\n\n  // func for push new folder to array\n  const addFolderButton = () => {\n    addItem(folderId);\n    handleClose();\n  };\n\n  // func make input active\n  const makeInputActive = () => {\n    handleClose();\n    changeInputStatus(\"changeStatus\", false);\n  };\n\n  // func for delete folder from array\n  const removeFolderButton = () => {\n    deleteItem();\n    clearId(undefined);\n    handleClose();\n  };\n\n  return (\n    <div style={{ cursor: \"context-menu\" }}>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={menuStatus}\n        keepMounted\n        open={Boolean(menuStatus)}\n        onClose={handleClose}\n      >\n        {name === \"note\" && !widthLimit ? null : (\n          <MenuItem onClick={addFolderButton}>\n            {`Add ${widthLimit ? name : \"note\"}`}\n          </MenuItem>\n        )}\n        <MenuItem onClick={makeInputActive}>{`Rename ${name}`}</MenuItem>\n        <MenuItem onClick={removeFolderButton}>{`Delete ${name}`}</MenuItem>\n      </Menu>\n    </div>\n  );\n}\n\nContextMenu.propTypes = {\n  folderId: PropTypes.string,\n  addItem: PropTypes.func.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n  changeInputStatus: PropTypes.func.isRequired,\n  clearId: PropTypes.func.isRequired,\n  setMenuStatus: PropTypes.func.isRequired,\n  menuStatus: PropTypes.object,\n};\n","import { uid } from \"uid\";\nimport moment from \"moment\";\n\nconst ADD_NOTE = \"ADD_NOTE\";\nconst DELETE_NOTE = \"DELETE_NOTE\";\nconst SET_NOTE_ID = \"SET_NOTE_ID\";\nconst EDIT_NOTE = \"EDIT_NOTE\";\n\nconst initialState = {\n  notesList: JSON.parse(localStorage.getItem(\"arrNotes\")) || [],\n  noteId: undefined,\n};\n\nexport function notesReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_NOTE:\n      const newNote = {\n        id: uid(),\n        folderId: action.payload,\n        name: \"New Note\",\n        inputStatus: true,\n        date: moment().format(\"L\"),\n        dateNote: moment().format(\"LLLL\"),\n      };\n      localStorage.setItem(\"arrNotes\", JSON.stringify([...state.notesList, newNote]));\n      return { ...state, notesList: [...state.notesList, newNote] };\n\n    case SET_NOTE_ID:\n      return { ...state, noteId: action.payload };\n\n    case DELETE_NOTE:\n      const changedNoteList = state.notesList.filter((item) => item.id !== state.noteId);\n      localStorage.setItem(\"arrNotes\", JSON.stringify(changedNoteList));\n      return { ...state, notesList: changedNoteList, };\n\n    case EDIT_NOTE:\n      const changeNoteList = state.notesList.map((item) => {\n        if (item.id === state.noteId) {\n          return {\n            id: item.id,\n            folderId: action.typeOfChange === \"changeNoteId\" ? action.payload : item.folderId,\n            name: action.typeOfChange === \"renameNote\" ? action.payload : item.name,\n            inputStatus: action.typeOfChange === \"changeStatus\" ? action.payload : item.inputStatus,\n            noteValue: action.typeOfChange === \"changeNoteValue\" ? action.payload : item.noteValue || \"\",\n            date: item.date,\n            dateNote: item.dateNote,\n          };\n        }\n        return item;\n      });\n      localStorage.setItem(\"arrNotes\", JSON.stringify(changeNoteList));\n      return { ...state, notesList: changeNoteList };\n    default:\n      return state;\n  }\n}\n\nexport function addNote(activeFolderId) {\n  return {\n    type: \"ADD_NOTE\",\n    payload: activeFolderId,\n  };\n}\n\nexport function deleteNote() {\n  return {\n    type: \"DELETE_NOTE\",\n  };\n}\n\nexport function editNote(status, value) {\n  return {\n    type: \"EDIT_NOTE\",\n    payload: value,\n    typeOfChange: status,\n  };\n}\n\nexport function setNoteId(noteId) {\n  return {\n    type: \"SET_NOTE_ID\",\n    payload: noteId,\n  };\n}\n","import { uid } from \"uid\";\r\n\r\nconst ADD_FOLDER = \"ADD_FOLDER\";\r\nconst DELETE_FOLDER = \"DELETE_FOLDER\";\r\nconst SET_FOLDER_ID = \"SET_FOLDER_ID\";\r\nconst EDIT_FOLDER = \"EDIT_FOLDER\";\r\n\r\nconst initialState = {\r\n  foldersList: JSON.parse(localStorage.getItem(\"arrFolders\")) || [],\r\n  folderId: undefined,\r\n};\r\n\r\nexport function folderReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_FOLDER:\r\n      const newFolder = {\r\n        id: uid(),\r\n        name: \"New Folder\",\r\n        inputStatus: true,\r\n      };\r\n      localStorage.setItem(\"arrFolders\",JSON.stringify([...state.foldersList, newFolder])\r\n      );\r\n      return { ...state, foldersList: [...state.foldersList, newFolder] };\r\n\r\n    case SET_FOLDER_ID:\r\n      return { ...state, folderId: action.payload };\r\n\r\n    case DELETE_FOLDER:\r\n      const changedFolderList = state.foldersList.filter((item) => item.id !== state.folderId);\r\n      localStorage.setItem(\"arrFolders\", JSON.stringify(changedFolderList));\r\n      return { ...state, foldersList: changedFolderList,};\r\n\r\n    case EDIT_FOLDER:\r\n      const changeFolderList = state.foldersList.map((item) => {\r\n        if (item.id === state.folderId) {\r\n          return {\r\n            id: item.id,\r\n            name: action.typeOfChange === \"renameFolder\" ? action.payload : item.name,\r\n            inputStatus: action.typeOfChange === \"changeStatus\" ? action.payload : item.inputStatus,\r\n          };\r\n        }\r\n        return item;\r\n      });\r\n      localStorage.setItem(\"arrFolders\", JSON.stringify(changeFolderList));\r\n      return { ...state, foldersList: changeFolderList };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function addFolder() {\r\n  return {\r\n    type: \"ADD_FOLDER\",\r\n  };\r\n}\r\n\r\nexport function deleteFolder() {\r\n  return {\r\n    type: \"DELETE_FOLDER\",\r\n  };\r\n}\r\n\r\nexport function editFolder(status, value) {\r\n  return {\r\n    type: \"EDIT_FOLDER\",\r\n    payload: value,\r\n    typeOfChange: status,\r\n  };\r\n}\r\n\r\nexport function setFolderId(folderId) {\r\n  return {\r\n    type: \"SET_FOLDER_ID\",\r\n    payload: folderId,\r\n  };\r\n}\r\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ContextMenu from \"../ContextMenu/index\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport { addNote } from \"../../Redux/ReducersFolder/notesReducer\";\nimport { addFolder, deleteFolder, setFolderId, editFolder, } from \"../../Redux/ReducersFolder/folderReducer.js\";\nimport { setNoteId } from \"../../Redux/ReducersFolder/notesReducer\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiListItem-root\": {\n      height: \"40px\",\n      [theme.breakpoints.down(\"sm\")]: {\n        backgroundColor: \"#cccccc\",\n        height: \"60px\",\n      },\n    },\n  },\n  inputStyle: {\n    display: \"flex\",\n    \"& .Mui-focused\": {\n      backgroundColor: \"#f7f6f7\",\n    },\n    \"& .Mui-disabled\": {\n      color: \"black\",\n    },\n  },\n}));\n\nconst mapStateToProps = (store) => {\n  const { folderId } = store.folder;\n  const { noteId } = store.notes;\n  return {\n    folderId,\n    noteId,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addFolderAction: () => dispatch(addFolder()),\n    deleteFolderAction: () => dispatch(deleteFolder()),\n    editFolderAction: (type, value) => dispatch(editFolder(type, value)),\n    setFolderIdAction: (folderId) => dispatch(setFolderId(folderId)),\n    setNoteIdAction: (noteId) => dispatch(setNoteId(noteId)),\n    addNoteAction: (folderId) => dispatch(addNote(folderId)),\n  };\n};\n\nfunction FolderItem(props) {\n  const classes = useStyles();\n  const {\n    folderId,\n    noteId,\n    itemId,\n    itemName,\n    itemStatus,\n    setFolderIdAction,\n    setNoteIdAction,\n    addFolderAction,\n    addNoteAction,\n    deleteFolderAction,\n    editFolderAction,\n  } = props;\n  const [menuStatus, setMenuStatus] = useState(null);\n  const theme = useTheme();\n  const widthLimit = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n  // func for set selected folder\n  const handleListItemClick = (event, index) => {\n    if (folderId !== itemId) {\n      setFolderIdAction(index);\n    }\n    if (noteId !== undefined) {\n      setNoteIdAction(undefined);\n    }\n  };\n\n  // func for set menu status\n  const openContextMenu = (event) => {\n    setMenuStatus(event.currentTarget);\n  };\n  // change item name\n  const handleOnChange = (event) => {\n    editFolderAction(\"renameFolder\", event.target.value);\n  };\n  // deactive input status on Blur\n  const handleOnBlur = () => {\n    editFolderAction(\"changeStatus\", true);\n  };\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <ListItem\n          button\n          onDoubleClick={widthLimit ? openContextMenu : null}\n          selected={folderId === itemId}\n          onClick={(event) => handleListItemClick(event, itemId)}\n        >\n          <ListItemText\n            primary={\n              <TextField\n                id={itemId}\n                className={classes.inputStyle}\n                defaultValue={itemName}\n                onChange={handleOnChange}\n                onBlur={handleOnBlur}\n                InputProps={{\n                  disableUnderline: itemStatus,\n                  disabled: itemStatus,\n                  autoFocus: true,\n                }}\n              />\n            }\n          />\n          <Hidden mdUp>\n            <IconButton onClick={openContextMenu}>\n              <MoreHorizIcon />\n            </IconButton>\n          </Hidden>\n        </ListItem>\n      </div>\n      <ContextMenu\n        name={\"folder\"}\n        menuStatus={menuStatus}\n        setMenuStatus={setMenuStatus}\n        folderId={folderId}\n        addItem={widthLimit ? addFolderAction : addNoteAction}\n        deleteItem={deleteFolderAction}\n        clearId={setFolderIdAction}\n        changeInputStatus={editFolderAction}\n      />\n    </div>\n  );\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(FolderItem);\n\nFolderItem.propTypes = {\n  itemId: PropTypes.string.isRequired,\n  itemName: PropTypes.string.isRequired,\n  itemStatus: PropTypes.bool.isRequired,\n  setFolderIdAction: PropTypes.func.isRequired,\n  setNoteIdAction: PropTypes.func.isRequired,\n  editFolderAction: PropTypes.func.isRequired,\n  folderId: PropTypes.string,\n  noteId: PropTypes.string,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport { addFolder } from \"../../Redux/ReducersFolder/folderReducer.js\";\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    textTransform: \"none\",\n    fontWeight: \"bold\",\n    width: \"100%\",\n    display: \"  flex\",\n    justifyContent: \"flex-start\",\n    paddingLeft: \"15px\",\n  },\n}));\n\nconst mapStateToProps = (store) => {\n  const { foldersList } = store.folder;\n  return {\n    foldersList,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addFolderAction: () => dispatch(addFolder()),\n  };\n};\n\nfunction AddFolderButton(props) {\n  const classes = useStyles();\n  const { addFolderAction } = props;\n\n  // func for add folder to array\n  const handleButtonClick = () => {\n    addFolderAction();\n  };\n\n  return (\n    <div className={classes.buttonStyle}>\n      <Button\n        className={classes.root}\n        startIcon={<AddCircleOutlineIcon />}\n        onClick={handleButtonClick}\n      >\n        New Folder\n      </Button>\n    </div>\n  );\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AddFolderButton);\n\nAddFolderButton.propTypes = {\n  addFolderAction: PropTypes.func.isRequired,\n};\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\n\nconst useStyles = makeStyles(() => ({\n  timeStyle: {\n    display: 'flex',\n    justifyContent: 'center',\n    color: '#bababa',\n    marginTop: '20px'\n  }\n}))\n\nexport default function NoteTime (props) {\n  const classes = useStyles()\n  const { itemTime } = props\n\n  return (\n    <div className={classes.timeStyle}>\n      {itemTime}\n    </div>\n  )\n}\n\nNoteTime.propTypes = {\n  itemTime: PropTypes.string.isRequired\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { setNoteId, editNote } from \"../../Redux/ReducersFolder/notesReducer\";\n\nconst useStyles = makeStyles((theme) => ({\n  textAreaStyle: {\n    width: \"99%\",\n    border: \"0px\",\n    height: \"85vh\",\n    resize: \"none\",\n    outline: \"none\",\n    backgroundColor: \"#f7f6f7\",\n    marginTop: \"20px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"80vh\",\n    },\n  },\n}));\n\nconst mapStateToProps = (store) => {\n  const { noteId, notesList } = store.notes;\n\n  return {\n    noteId,\n    notesList,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setNoteIdAction: (noteId) => dispatch(setNoteId(noteId)),\n    editNoteAction: (type, value) => dispatch(editNote(type, value)),\n  };\n};\n\nfunction NoteTextArea(props) {\n  const classes = useStyles();\n  const { editNoteAction, defaultValue } = props;\n\n  // func for change note value onChange\n  const handleOnlChange = (event) => {\n    editNoteAction(\"changeNoteValue\", event.target.value);\n  };\n\n  return (\n    <div>\n      <textarea\n        className={classes.textAreaStyle}\n        defaultValue={defaultValue}\n        onChange={handleOnlChange}\n      />\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteTextArea);\n\nNoteTextArea.propTypes = {\n  noteId: PropTypes.string,\n  notesList: PropTypes.array.isRequired,\n  editNoteAction: PropTypes.func.isRequired,\n  defaultValue: PropTypes.string,\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport NoteTime from \"./noteTime\";\nimport NoteTextArea from \"./noteTextArea\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    \"& > *\": {\n      display: \"flex\",\n      height: \"95vh\",\n      flexDirection: \"column\",\n      backgroundColor: \"#f7f6f7\",\n    },\n  },\n}));\n\nconst mapStateToProps = (store) => {\n  const { noteId, notesList } = store.notes;\n\n  return {\n    noteId,\n    notesList,\n  };\n};\n\nfunction NoteText(props) {\n  const classes = useStyles();\n  const { noteId, notesList } = props;\n  const currentNoteValue = notesList.filter((item) => item.id === noteId);\n\n  return (\n    <div className={classes.root}>\n      <Paper variant=\"outlined\" square>\n        {currentNoteValue.map((item) => (\n          <div key={item.id}>\n            <NoteTime itemTime={item.dateNote} />\n            <NoteTextArea defaultValue={item.noteValue} />\n          </div>\n        ))}\n      </Paper>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps)(NoteText);\n\nNoteText.propTypes = {\n  noteId: PropTypes.string,\n  notesList: PropTypes.array.isRequired,\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport PropTypes from \"prop-types\";\nimport NoteText from \"../Note/index\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"#f7f6f7\",\n  },\n  button: {\n    width: \"100%\",\n    color: \"#bababa\",\n    height: \"30px\",\n    textTransform: \"none\",\n  },\n}));\n\nexport default function NotesModal(props) {\n  const classes = useStyles();\n  const { setOpen, open } = props;\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Modal open={open} onClose={setOpen}>\n        <div className={classes.root}>\n          <Button className={classes.button} onClick={handleClose}>\n            Save and Close\n          </Button>\n          <NoteText />\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nNotesModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ContextMenu from \"../ContextMenu/index\";\nimport NotesModal from \"../Modal/index\";\nimport { connect } from \"react-redux\";\nimport { addNote, setNoteId, deleteNote, editNote } from \"../../Redux/ReducersFolder/notesReducer\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& .Mui-selected\": {\n      backgroundColor: \"#fde46e\",\n      [theme.breakpoints.down(\"sm\")]: {\n        backgroundColor: \"transparent\",\n      },\n    },\n    \"& .MuiListItemText-root\": {\n      width: \"100%\",\n    },\n    \"& .MuiListItem-root\": {\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\",\n      [theme.breakpoints.down(\"sm\")]: {\n        paddingLeft: \"16px\",\n        paddingRight: \"16px\",\n      },\n    },\n  },\n  rootInput: {\n    display: \"flex\",\n    \"& .Mui-focused\": {\n      backgroundColor: \"#f7f6f7\",\n    },\n    \"& .Mui-disabled\": {\n      color: \"black\",\n    },\n  },\n  notesFieldsPosition: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n    width: \"100%\",\n  },\n}));\n\nconst mapStateToProps = (store) => {\n  const { notesList, noteId } = store.notes;\n  const { folderId } = store.folder;\n  return {\n    notesList,\n    noteId,\n    folderId,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addNoteAction: (folderId) => dispatch(addNote(folderId)),\n    deleteNoteAction: () => dispatch(deleteNote()),\n    editNoteAction: (type, value) => dispatch(editNote(type, value)),\n    setNoteIdAction: (noteId) => dispatch(setNoteId(noteId)),\n  };\n};\n\nfunction NotesItem(props) {\n  const classes = useStyles();\n  const {\n    noteId,\n    folderId,\n    setNoteIdAction,\n    editNoteAction,\n    addNoteAction,\n    deleteNoteAction,\n    itemId,\n    itemName,\n    itemStatus,\n    itemDate,\n  } = props;\n  const [open, setOpen] = useState(false);\n  const [menuStatus, setMenuStatus] = useState(null);\n  const theme = useTheme();\n  const widthLimit = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n  const handleOpenModal = () => {\n    if (open) return setOpen(false);\n    return setOpen(true);\n  };\n\n  // func for set selected folder\n  const handleListItemClick = (event, index) => {\n    if (noteId !== itemId) {\n      setNoteIdAction(index);\n    }\n  };\n\n  // func for set status context menu\n  const openContextMenu = (event) => {\n    setMenuStatus(event.currentTarget);\n  };\n\n  // func for change value name note onChange\n  const handleOnChange = (event) => {\n    editNoteAction(\"renameNote\", event.target.value);\n  };\n\n  // deactive input status on Blur\n  const handleOnBlur = () => {\n    editNoteAction(\"changeStatus\", true);\n  };\n\n  return (\n    <div className={classes.root}>\n      <ListItem\n        button\n        onDoubleClick={widthLimit ? openContextMenu : handleOpenModal}\n        selected={noteId === itemId}\n        onClick={(event) => handleListItemClick(event, itemId)}\n      >\n        <div className={classes.notesFieldsPosition}>\n          <ListItemText\n            primary={\n              <TextField\n                id={itemId}\n                className={classes.rootInput}\n                value={itemName}\n                onChange={handleOnChange}\n                onBlur={handleOnBlur}\n                InputProps={{\n                  disableUnderline: itemStatus,\n                  disabled: itemStatus,\n                  autoFocus: true,\n                }}\n              />\n            }\n          />\n          <div>{itemDate}</div>\n        </div>\n        <Hidden mdUp>\n          <IconButton onClick={openContextMenu}>\n            <MoreHorizIcon />\n          </IconButton>\n        </Hidden>\n      </ListItem>\n      <NotesModal open={open} setOpen={setOpen} />\n      <ContextMenu\n        name={\"note\"}\n        menuStatus={menuStatus}\n        setMenuStatus={setMenuStatus}\n        addItem={addNoteAction}\n        deleteItem={deleteNoteAction}\n        clearId={setNoteIdAction}\n        changeInputStatus={editNoteAction}\n        folderId={folderId}\n      />\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotesItem);\n\nNotesItem.propTypes = {\n  itemId: PropTypes.string.isRequired,\n  itemName: PropTypes.string.isRequired,\n  itemDate: PropTypes.string.isRequired,\n  itemStatus: PropTypes.bool.isRequired,\n  addNotesAction: PropTypes.func,\n  notesList: PropTypes.array.isRequired,\n  setNoteIdAction: PropTypes.func.isRequired,\n  noteId: PropTypes.string,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport { connect } from \"react-redux\";\nimport FolderItem from \"./folderItem\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport AddFolderButton from \"./addFolderButton.js\";\nimport Paper from \"@material-ui/core/Paper\";\nimport NotesItem from \"../NotesList/notesItem\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    \"& > *\": {\n      display: \"flex\",\n      height: \"95vh\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\",\n      backgroundColor: \"#f7f6f7\",\n      [theme.breakpoints.down(\"sm\")]: {\n        height: \"100vh\",\n      },\n    },\n  },\n  folderListWrapper: {\n    overflow: \"auto\",\n    backgroundColor: \"none\",\n  },\n}));\n\nconst mapStateToProps = (store) => {\n  const { foldersList } = store.folder;\n  const { notesList } = store.notes;\n  return {\n    foldersList,\n    notesList,\n  };\n};\n\nfunction FolderList(props) {\n  const classes = useStyles();\n  const { foldersList, notesList } = props;\n\n  return (\n    <div className={classes.root}>\n      <Paper variant=\"outlined\" square>\n        <div className={classes.folderListWrapper}>\n          <Droppable droppableId=\"droppableFolder\" isCombineEnabled>\n            {(provided) => (\n              <List\n                component=\"nav\"\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {foldersList.map((folderItem, index) => (\n                  <Draggable\n                    index={index}\n                    draggableId={folderItem.id}\n                    key={folderItem.id}\n                    isDragDisabled\n                  >\n                    {(provided) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <FolderItem\n                          itemId={folderItem.id}\n                          itemName={folderItem.name}\n                          itemStatus={folderItem.inputStatus}\n                        />\n                        <Hidden mdUp>\n                          {notesList.filter((NoteItem) => NoteItem.folderId === folderItem.id).map((NoteItem) => (\n                            <NotesItem\n                              key={NoteItem.id}\n                              itemId={NoteItem.id}\n                              itemName={NoteItem.name}\n                              itemStatus={NoteItem.inputStatus}\n                              itemDate={NoteItem.date}\n                            />\n                          ))}\n                        </Hidden>\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </List>\n            )}\n          </Droppable>\n        </div>\n        <AddFolderButton />\n      </Paper>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps)(FolderList);\n\nFolderList.propTypes = {\n  foldersList: PropTypes.array.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport { connect } from \"react-redux\";\nimport NotesItem from \"./notesItem\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    \"& > *\": {\n      display: \"flex\",\n      height: \"95vh\",\n      flexDirection: \"column\",\n      backgroundColor: \"#f7f6f7\",\n    },\n  },\n  noteListWrapper: {\n    overflow: \"auto\",\n    backgroundColor: \"none\",\n    \"& > *\": {\n      padding: \"0px\",\n      width: \"100%\",\n    },\n  },\n}));\n\nconst mapStateToProps = (store) => {\n  const { notesList } = store.notes;\n  const { folderId } = store.folder;\n  return {\n    notesList,\n    folderId,\n  };\n};\n\nfunction NoteList(props) {\n  const classes = useStyles();\n  const { notesList, folderId } = props;\n  const notesInActiveFolder = notesList.filter((item) => item.folderId === folderId);\n\n  return (\n    <div className={classes.root}>\n      <Paper variant=\"outlined\" square>\n        <div className={classes.noteListWrapper}>\n          <Droppable droppableId=\"droppable\">\n            {(provided) => (\n              <List \n                component=\"nav\"\n                {...provided.droppableProps}\n                ref={provided.innerRef}>\n                {notesInActiveFolder.map((item, index) => (\n                  <Draggable \n                    index={index} \n                    draggableId={item.id} \n                    key={item.id}>\n                    {(provided, snapshot) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={{\n                          backgroundColor: snapshot.isDragging ? \"#fde46e\" : \"none\",\n                          ...provided.draggableProps.style,\n                        }}\n                      >\n                        <NotesItem\n                          itemId={item.id}\n                          itemName={item.name}\n                          itemStatus={item.inputStatus}\n                          itemDate={item.date}\n                        />\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </List>\n            )}\n          </Droppable>\n        </div>\n      </Paper>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps)(NoteList);\n\nNoteList.propTypes = {\n  notesList: PropTypes.array.isRequired,\n  folderId: PropTypes.string,\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    \"& > *\": {\n      height: \"10px\",\n      width: \"10px\",\n      borderRadius: \"10px\",\n      margin: \"7px 0px 0px 5px\",\n    },\n  },\n  redButton: { backgroundColor: \"#fd5a52\", },\n  yellowButton: { backgroundColor: \"#fdbb3f\", },\n  greenButton: { backgroundColor: \"#31c747\", },\n}));\n\nexport default function ClosingMenu() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.redButton}></div>\n      <div className={classes.yellowButton}></div>\n      <div className={classes.greenButton}></div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addNote, setNoteId, deleteNote } from \"../../Redux/ReducersFolder/notesReducer\";\nimport { deleteFolder, setFolderId } from \"../../Redux/ReducersFolder/folderReducer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ViewCompactOutlinedIcon from \"@material-ui/icons/ViewCompactOutlined\";\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\nimport NoteAddOutlinedIcon from \"@material-ui/icons/NoteAddOutlined\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    marginLeft: \"30%\",\n    \"& > *\": {\n      marginLeft: \"15px\",\n      marginTop: \"5px\",\n      padding: \"0px\",\n      width: \"40px\",\n      height: \"20px\",\n      borderRadius: \"3px\",\n      backgroundColor: \"#f5f5f5\",\n      boxShadow: \"0 5px 4px -4px rgba(0, 0, 0, .2) \",\n    },\n  },\n}));\n\nconst mapStateToProps = (store) => {\n  const { noteId } = store.notes;\n  const { folderId } = store.folder;\n\n  return {\n    noteId,\n    folderId,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addNoteAction: (folderId) => dispatch(addNote(folderId)),\n    setNoteIdAction: (noteId) => dispatch(setNoteId(noteId)),\n    deleteFolderAction: () => dispatch(deleteFolder()),\n    deleteNoteAction: () => dispatch(deleteNote()),\n    setFolderIdAction: (folderId) => dispatch(setFolderId(folderId)),\n  };\n};\n\nfunction ButtonsBlock(props) {\n  const classes = useStyles();\n  const {\n    folderListVisibility,\n    setFolderListVisibility,\n    deleteFolderAction,\n    deleteNoteAction,\n    folderId,\n    addNoteAction,\n    setNoteIdAction,\n    noteId,\n    setFolderIdAction,\n  } = props;\n\n  // func for close/open folder list\n  const changeVisibilityFolderList = () => {\n    if (folderListVisibility) {\n      return setFolderListVisibility(false);\n    }\n    return setFolderListVisibility(true);\n  };\n\n  // func for add new notes from folder\n  const addNoteButton = () => {\n    if (folderId) {\n      addNoteAction(folderId);\n    }\n  };\n\n  // func for remove active element folder/note\n  const removeActiveElement = () => {\n    if (!noteId) {\n      deleteFolderAction();\n      setFolderIdAction(undefined);\n    } else {\n      deleteNoteAction();\n      setNoteIdAction(undefined);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={changeVisibilityFolderList}>\n        <ViewCompactOutlinedIcon fontSize=\"small\" />\n      </IconButton>\n      <IconButton onClick={removeActiveElement}>\n        <DeleteOutlineOutlinedIcon fontSize=\"small\" />\n      </IconButton>\n      <IconButton onClick={addNoteButton}>\n        <NoteAddOutlinedIcon fontSize=\"small\" />\n      </IconButton>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonsBlock);\n\nButtonsBlock.propTypes = {\n  noteId: PropTypes.string,\n  folderId: PropTypes.string,\n  addNoteAction: PropTypes.func.isRequired,\n  deleteFolderAction: PropTypes.func.isRequired,\n  deleteNoteAction: PropTypes.func.isRequired,\n  setNoteIdAction: PropTypes.func.isRequired,\n  setFolderIdAction: PropTypes.func.isRequired,\n  folderListVisibility: PropTypes.bool.isRequired,\n  setFolderListVisibility: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ClosingMenu from \"./closingMenu\";\nimport ButtonsBlock from \"./buttonsBlock\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    height: \"30px\",\n    backgroundColor: \"#e1dee1\",\n    borderTopLeftRadius: \"5px\",\n    borderTopRightRadius: \"5px\",\n    boxShadow: \"0 0 5px white inset\",\n    display: \"flex\",\n  },\n}));\n\nexport default function Header(props) {\n  const classes = useStyles();\n  const { folderListVisibility, setFolderListVisibility } = props;\n\n  return (\n    <div className={classes.root}>\n      <ClosingMenu />\n      <ButtonsBlock\n        folderListVisibility={folderListVisibility}\n        setFolderListVisibility={setFolderListVisibility}\n      />\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  folderListVisibility: PropTypes.bool.isRequired,\n  setFolderListVisibility: PropTypes.func.isRequired,\n};\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FolderList from \"./components/FoldersList/index\";\nimport NoteList from \"./components/NotesList/index\";\nimport NoteText from \"./components/Note/index\";\nimport Header from \"./components/Header/index\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { editNote, setNoteId } from \"./Redux/ReducersFolder/notesReducer\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  header: { display: \"flex\" },\n  main: { display: \"flex\", height: \"95vh\" },\n  folderList: {\n    flex: \"0 25%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flex: \"0 100%\",\n    },\n  },\n  notesList: { flex: \"0 25%\" },\n  note: { flex: \"1 50%\" },\n}));\n\nconst mapStateToProps = (store) => {\n  const { notesList, noteId } = store.notes;\n  const { folderId } = store.folder;\n  return {\n    notesList,\n    noteId,\n    folderId,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    editNoteAction: (type, value) => dispatch(editNote(type, value)),\n    setNoteIdAction: (noteId) => dispatch(setNoteId(noteId)),\n  };\n};\n\nfunction App(props) {\n  const [folderListVisibility, setFolderListVisibility] = useState(true);\n  const { editNoteAction, setNoteIdAction } = props;\n  const classes = useStyles();\n\n  // func for change folder id from note when DRAG ended\n  const handleOnDragEnd = (result) => {\n    const { combine, draggableId } = result;\n    if (combine) {\n      setNoteIdAction(draggableId);\n      editNoteAction(\"changeNoteId\", combine.draggableId);\n      setNoteIdAction(undefined);\n    }\n  };\n\n  return (\n    <DragDropContext onDragEnd={handleOnDragEnd}>\n      <div className={classes.root}>\n        <Hidden smDown>\n          <div className={classes.header}>\n            <Header folderListVisibility={folderListVisibility} setFolderListVisibility={setFolderListVisibility}/>\n          </div>\n        </Hidden>\n        <div className={classes.main}>\n          <div className={classes.folderList} style={{ display: folderListVisibility ? \"block\" : \"none\" }}>\n            <FolderList />\n          </div>\n          <Hidden smDown>\n            <div className={classes.notesList}><NoteList /></div>\n            <div className={classes.note}><NoteText /></div>\n          </Hidden>\n        </div>\n      </div>\n    </DragDropContext>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nApp.propTypes = {\n  editNoteAction: PropTypes.func.isRequired,\n  setNoteIdAction: PropTypes.func.isRequired,\n};\n","import { combineReducers } from 'redux'\nimport { folderReducer } from './folderReducer'\nimport { notesReducer } from './notesReducer'\n\nexport const rootReducer = combineReducers({\n  folder: folderReducer,\n  notes: notesReducer\n})\n","import { createStore } from \"redux\";\nimport { rootReducer } from \"../ReducersFolder/index\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\n\nexport const store = createStore(rootReducer, devToolsEnhancer());\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./Redux/StoreFolder/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
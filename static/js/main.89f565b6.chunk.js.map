{"version":3,"sources":["components/ContextMenu/index.js","redux/actions/folderActions.js","redux/actions/notesActions.js","components/FoldersList/folderListItem.js","components/FoldersList/addFolderButton.js","components/Note/noteTime.js","components/Note/noteTextArea.js","components/Note/index.js","components/Modal/index.js","components/NotesList/notesListItem.js","components/FoldersList/index.js","components/NotesList/index.js","components/Header/closingMenu.js","components/Header/buttonsBlock.js","components/Header/index.js","App.js","redux/reducersFolder/folderReducer.js","redux/reducersFolder/notesReducer.js","redux/reducersFolder/index.js","redux/storeFolder/store.js","index.js"],"names":["ContextMenu","props","theme","useTheme","widthLimit","useMediaQuery","breakpoints","up","name","folderId","addItem","deleteItem","clearId","ClearUnusedNotes","menuStatus","setMenuStatus","changeInputStatus","handleClose","style","cursor","Menu","id","anchorEl","keepMounted","open","Boolean","onClose","MenuItem","onClick","undefined","ADD_FOLDER","DELETE_FOLDER","SET_FOLDER_ID","EDIT_FOLDER","addFolder","type","deleteFolder","editFolder","value","payload","fieldName","setFolderId","ADD_NOTE","DELETE_NOTE","SET_NOTE_ID","EDIT_NOTE","CLEAR_UNUSED_NOTES","MOVE_NOTES","addNote","activeFolderId","deleteNote","editNote","setNoteId","noteId","moveNotes","selectedNotes","useStyles","makeStyles","root","height","down","backgroundColor","inputStyle","display","color","connect","store","folder","notes","dispatch","bindActionCreators","classes","item","inputStatus","useState","openContextMenu","event","currentTarget","className","ListItem","button","onDoubleClick","selected","ListItemText","primary","TextField","defaultValue","onChange","target","onBlur","InputProps","disableUnderline","disabled","autoFocus","Hidden","mdUp","IconButton","textTransform","fontWeight","width","justifyContent","paddingLeft","foldersList","buttonStyle","Button","startIcon","timeStyle","marginTop","NoteTime","itemTime","textAreaStyle","border","resize","outline","notesList","flexDirection","currentNoteValue","filter","Paper","variant","square","map","dateNote","noteValue","position","NotesModal","setOpen","Modal","Note","paddingRight","rootInput","notesFieldsPosition","alignItems","date","folderListWrapper","overflow","droppableId","isCombineEnabled","provided","List","component","droppableProps","ref","innerRef","folderItem","index","draggableId","isDragDisabled","dragHandleProps","noteItem","NoteItem","placeholder","noteListWrapper","padding","snapshot","draggableProps","isDragging","borderRadius","margin","redButton","yellowButton","greenButton","ClosingMenu","marginLeft","boxShadow","folderListVisibility","setFolderListVisibility","fontSize","console","log","borderTopLeftRadius","borderTopRightRadius","Header","header","main","folderList","flex","note","setfolderListVisibility","onDragEnd","result","combine","items","splice","source","reorderedItem","destination","onDragStart","smDown","initialState","JSON","parse","localStorage","getItem","rootReducer","combineReducers","state","action","newFolder","uid","setItem","stringify","changedFolderList","changeFolderList","newNote","moment","format","changedNoteList","editedNotesList","concat","clearedNoteList","changeNoteList","createStore","devToolsEnhancer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89f565b6.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport default function ContextMenu(props) {\n  const theme = useTheme();\n  const widthLimit = useMediaQuery(theme.breakpoints.up(\"md\"));\n  const {\n    name,\n    folderId,\n    addItem,\n    deleteItem,\n    clearId,\n    ClearUnusedNotes,\n    menuStatus,\n    setMenuStatus,\n    changeInputStatus,\n  } = props;\n\n  // func for close context menu\n  const handleClose = () => {\n    setMenuStatus(null);\n  };\n\n  // func for push new item to array\n  const addItemButton = () => {\n    addItem(folderId);\n    handleClose();\n  };\n\n  // func make input active\n  const makeInputActive = () => {\n    handleClose();\n    changeInputStatus(\"inputStatus\", false);\n  };\n\n  // func for delete item from array\n  const removeitemButton = () => {\n    if (name === \"folder\") ClearUnusedNotes(folderId);\n    deleteItem();\n    clearId(undefined);\n    handleClose();\n  };\n\n  return (\n    <div style={{ cursor: \"context-menu\" }}>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={menuStatus}\n        keepMounted\n        open={Boolean(menuStatus)}\n        onClose={handleClose}\n      >\n        {name === \"note\" && !widthLimit ? null : (\n          <MenuItem onClick={addItemButton}>\n            {`Add ${widthLimit ? name : \"note\"}`}\n          </MenuItem>\n        )}\n        <MenuItem onClick={makeInputActive}>{`Rename ${name}`}</MenuItem>\n        <MenuItem onClick={removeitemButton}>{`Delete ${name}`}</MenuItem>\n      </Menu>\n    </div>\n  );\n}\n\nContextMenu.propTypes = {\n  folderId: PropTypes.string,\n  addItem: PropTypes.func.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n  changeInputStatus: PropTypes.func.isRequired,\n  clearId: PropTypes.func.isRequired,\n  setMenuStatus: PropTypes.func.isRequired,\n  menuStatus: PropTypes.object,\n};\n","export const ADD_FOLDER = \"ADD_FOLDER\";\r\nexport const DELETE_FOLDER = \"DELETE_FOLDER\";\r\nexport const SET_FOLDER_ID = \"SET_FOLDER_ID\";\r\nexport const EDIT_FOLDER = \"EDIT_FOLDER\";\r\n\r\nexport function addFolder() {\r\n  return {\r\n    type: \"ADD_FOLDER\",\r\n  };\r\n}\r\n\r\nexport function deleteFolder() {\r\n  return {\r\n    type: \"DELETE_FOLDER\",\r\n  };\r\n}\r\n\r\nexport function editFolder(name, value) {\r\n  return {\r\n    type: \"EDIT_FOLDER\",\r\n    payload: value,\r\n    fieldName: name,\r\n  };\r\n}\r\n\r\nexport function setFolderId(folderId) {\r\n  return {\r\n    type: \"SET_FOLDER_ID\",\r\n    payload: folderId,\r\n  };\r\n}\r\n","export const ADD_NOTE = \"ADD_NOTE\";\r\nexport const DELETE_NOTE = \"DELETE_NOTE\";\r\nexport const SET_NOTE_ID = \"SET_NOTE_ID\";\r\nexport const EDIT_NOTE = \"EDIT_NOTE\";\r\nexport const CLEAR_UNUSED_NOTES = \"CLEAR_UNUSED_NOTES\";\r\nexport const MOVE_NOTES = \"MOVE_NOTES\";\r\n\r\nexport function addNote(activeFolderId) {\r\n  return {\r\n    type: \"ADD_NOTE\",\r\n    payload: activeFolderId,\r\n  };\r\n}\r\n\r\nexport function deleteNote() {\r\n  return {\r\n    type: \"DELETE_NOTE\",\r\n  };\r\n}\r\n\r\nexport function editNote(name, value) {\r\n  return {\r\n    type: \"EDIT_NOTE\",\r\n    payload: value,\r\n    fieldName: name,\r\n  };\r\n}\r\n\r\nexport function setNoteId(noteId) {\r\n  return {\r\n    type: \"SET_NOTE_ID\",\r\n    payload: noteId,\r\n  };\r\n}\r\n\r\nexport function ClearUnusedNotes(folderId) {\r\n  return {\r\n    type: \"CLEAR_UNUSED_NOTES\",\r\n    payload: folderId,\r\n  };\r\n}\r\n\r\nexport function moveNotes(selectedNotes, folderId) {\r\n  return {\r\n    type: \"MOVE_NOTES\",\r\n    id: folderId,\r\n    payload: selectedNotes,\r\n  };\r\n}\r\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ContextMenu from \"../ContextMenu/index\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport {\n  addFolder,\n  deleteFolder,\n  setFolderId,\n  editFolder,\n} from \"../../redux/actions/folderActions\";\nimport { setNoteId, addNote, ClearUnusedNotes } from \"../../redux/actions/notesActions\";\nimport { bindActionCreators } from \"redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiListItem-root\": {\n      height: \"40px\",\n      [theme.breakpoints.down(\"sm\")]: {\n        backgroundColor: \"#cccccc\",\n        height: \"60px\",\n      },\n    },\n  },\n  inputStyle: {\n    display: \"flex\",\n    \"& .Mui-focused\": {\n      backgroundColor: \"#f7f6f7\",\n    },\n    \"& .Mui-disabled\": {\n      color: \"black\",\n    },\n  },\n}));\n\nconst mapStateToProps = (store) => {\n  const { folderId } = store.folder;\n  const { noteId } = store.notes;\n  return {\n    folderId,\n    noteId,\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators(\n      {\n        addFolder,\n        deleteFolder,\n        editFolder,\n        setFolderId,\n        setNoteId,\n        addNote,\n        ClearUnusedNotes,\n      },\n      dispatch\n    ),\n  };\n}\n\nfunction FolderListItem(props) {\n  const classes = useStyles();\n  const {\n    folderId,\n    noteId,\n    item,\n    setFolderId,\n    setNoteId,\n    addFolder,\n    addNote,\n    ClearUnusedNotes,\n    deleteFolder,\n    editFolder,\n  } = props;\n  const { id, name, inputStatus } = item;\n  const [menuStatus, setMenuStatus] = useState(null);\n  const theme = useTheme();\n  const widthLimit = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n  // func for set selected folder\n  const handleListItemClick = () => {\n    if (folderId !== id) {\n      setFolderId(id);\n    }\n    if (noteId !== undefined) {\n      setNoteId(undefined);\n    }\n  };\n\n  // func for set menu status\n  const openContextMenu = (event) => {\n    setMenuStatus(event.currentTarget);\n  };\n  // change item name\n  const handleOnChange = (event) => {\n    editFolder(\"name\", event.target.value);\n  };\n  // deactive input status on Blur\n  const handleOnBlur = () => {\n    editFolder(\"inputStatus\", true);\n  };\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <ListItem\n          button\n          onDoubleClick={widthLimit ? openContextMenu : null}\n          selected={folderId === id}\n          onClick={handleListItemClick}\n        >\n          <ListItemText\n            primary={\n              <TextField\n                id={id}\n                className={classes.inputStyle}\n                defaultValue={name}\n                onChange={handleOnChange}\n                onBlur={handleOnBlur}\n                InputProps={{\n                  disableUnderline: inputStatus,\n                  disabled: inputStatus,\n                  autoFocus: true,\n                }}\n              />\n            }\n          />\n          <Hidden mdUp>\n            <IconButton onClick={openContextMenu}>\n              <MoreHorizIcon />\n            </IconButton>\n          </Hidden>\n        </ListItem>\n      </div>\n      <ContextMenu\n        name={\"folder\"}\n        menuStatus={menuStatus}\n        setMenuStatus={setMenuStatus}\n        folderId={folderId}\n        addItem={widthLimit ? addFolder : addNote}\n        deleteItem={deleteFolder}\n        clearId={setFolderId}\n        ClearUnusedNotes={ClearUnusedNotes}\n        changeInputStatus={editFolder}\n      />\n    </div>\n  );\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(FolderListItem);\n\nFolderListItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  inputStatus: PropTypes.bool,\n  setFolderId: PropTypes.func.isRequired,\n  setNoteId: PropTypes.func.isRequired,\n  editFolder: PropTypes.func.isRequired,\n  folderId: PropTypes.string,\n  noteId: PropTypes.string,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport { addFolder } from \"../../redux/actions/folderActions\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    textTransform: \"none\",\n    fontWeight: \"bold\",\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    paddingLeft: \"15px\",\n  },\n}));\n\nconst mapStateToProps = (store) => {\n  const { foldersList } = store.folder;\n  return {\n    foldersList,\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators({ addFolder }, dispatch),\n  };\n}\n\nfunction AddFolderButton(props) {\n  const classes = useStyles();\n  const { addFolder } = props;\n\n  // func for add folder to array\n  const handleButtonClick = () => {\n    addFolder();\n  };\n\n  return (\n    <div className={classes.buttonStyle}>\n      <Button\n        className={classes.root}\n        startIcon={<AddCircleOutlineIcon />}\n        onClick={handleButtonClick}\n      >\n        New Folder\n      </Button>\n    </div>\n  );\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AddFolderButton);\n\nAddFolderButton.propTypes = {\n  addFolder: PropTypes.func.isRequired,\n};\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\n\nconst useStyles = makeStyles(() => ({\n  timeStyle: {\n    display: 'flex',\n    justifyContent: 'center',\n    color: '#bababa',\n    marginTop: '20px'\n  }\n}))\n\nexport default function NoteTime (props) {\n  const classes = useStyles()\n  const { itemTime } = props\n\n  return (\n    <div className={classes.timeStyle}>\n      {itemTime}\n    </div>\n  )\n}\n\nNoteTime.propTypes = {\n  itemTime: PropTypes.string.isRequired\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { editNote } from \"../../redux/actions/notesActions\";\nimport { bindActionCreators } from \"redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  textAreaStyle: {\n    width: \"99%\",\n    border: \"0px\",\n    height: \"85vh\",\n    resize: \"none\",\n    outline: \"none\",\n    backgroundColor: \"#f7f6f7\",\n    marginTop: \"20px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"80vh\",\n    },\n  },\n}));\n\nconst mapStateToProps = (store) => {\n  const { noteId, notesList } = store.notes;\n\n  return {\n    noteId,\n    notesList,\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators({ editNote }, dispatch),\n  };\n}\n\nfunction NoteTextArea(props) {\n  const classes = useStyles();\n  const { editNote, defaultValue } = props;\n\n  // func for change note value onChange\n  const handleOnlChange = (event) => {\n    editNote(\"noteValue\", event.target.value);\n  };\n\n  return (\n    <div>\n      <textarea\n        className={classes.textAreaStyle}\n        defaultValue={defaultValue}\n        onChange={handleOnlChange}\n      />\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteTextArea);\n\nNoteTextArea.propTypes = {\n  noteId: PropTypes.string,\n  notesList: PropTypes.array.isRequired,\n  editNote: PropTypes.func.isRequired,\n  defaultValue: PropTypes.string,\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport NoteTime from \"./noteTime\";\nimport NoteTextArea from \"./noteTextArea\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    \"& > *\": {\n      display: \"flex\",\n      height: \"95vh\",\n      flexDirection: \"column\",\n      backgroundColor: \"#f7f6f7\",\n    },\n  },\n}));\n\nconst mapStateToProps = (store) => {\n  const { noteId, notesList } = store.notes;\n\n  return {\n    noteId,\n    notesList,\n  };\n};\n\nfunction NoteText(props) {\n  const classes = useStyles();\n  const { noteId, notesList } = props;\n  const currentNoteValue = notesList.filter((item) => item.id === noteId);\n\n  return (\n    <div className={classes.root}>\n      <Paper variant=\"outlined\" square>\n        {currentNoteValue.map((item) => (\n          <div key={item.id}>\n            <NoteTime itemTime={item.dateNote} />\n            <NoteTextArea defaultValue={item.noteValue} />\n          </div>\n        ))}\n      </Paper>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps)(NoteText);\n\nNoteText.propTypes = {\n  noteId: PropTypes.string,\n  notesList: PropTypes.array.isRequired,\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport PropTypes from \"prop-types\";\nimport NoteText from \"../Note/index\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"#f7f6f7\",\n  },\n  button: {\n    width: \"100%\",\n    color: \"#bababa\",\n    height: \"30px\",\n    textTransform: \"none\",\n  },\n}));\n\nexport default function NotesModal(props) {\n  const classes = useStyles();\n  const { setOpen, open } = props;\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Modal open={open} onClose={setOpen}>\n        <div className={classes.root}>\n          <Button className={classes.button} onClick={handleClose}>\n            Save and Close\n          </Button>\n          <NoteText />\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nNotesModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ContextMenu from \"../ContextMenu/index\";\nimport NotesModal from \"../Modal/index\";\nimport { connect } from \"react-redux\";\nimport {\n  addNote,\n  setNoteId,\n  deleteNote,\n  editNote,\n} from \"../../redux/actions/notesActions\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport { bindActionCreators } from \"redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& .Mui-selected\": {\n      backgroundColor: \"#fde46e\",\n      [theme.breakpoints.down(\"sm\")]: {\n        backgroundColor: \"transparent\",\n      },\n    },\n    \"& .MuiListItemText-root\": {\n      width: \"100%\",\n    },\n    \"& .MuiListItem-root\": {\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\",\n      [theme.breakpoints.down(\"sm\")]: {\n        paddingLeft: \"16px\",\n        paddingRight: \"16px\",\n      },\n    },\n  },\n  rootInput: {\n    display: \"flex\",\n    \"& .Mui-focused\": {\n      backgroundColor: \"#f7f6f7\",\n    },\n    \"& .Mui-disabled\": {\n      color: \"black\",\n    },\n  },\n  notesFieldsPosition: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n    width: \"100%\",\n  },\n}));\n\nconst mapStateToProps = (store) => {\n  const { notesList, noteId } = store.notes;\n  const { folderId } = store.folder;\n  return {\n    notesList,\n    noteId,\n    folderId,\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators({ addNote, deleteNote, editNote, setNoteId }, dispatch),\n  };\n}\n\nfunction NotesListItem(props) {\n  const classes = useStyles();\n  const { noteId, folderId, setNoteId, editNote, addNote, deleteNote, item } = props;\n  const { id, name, inputStatus, date } = item;\n  const [open, setOpen] = useState(false);\n  const [menuStatus, setMenuStatus] = useState(null);\n  const theme = useTheme();\n  const widthLimit = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n  const handleOpenModal = () => {\n    if (open) return setOpen(false);\n    return setOpen(true);\n  };\n\n  // func for set selected folder\n  const handleListItemClick = () => {\n    if (noteId !== id) {\n      setNoteId(id);\n    }\n  };\n\n  // func for set status context menu\n  const openContextMenu = (event) => {\n    setMenuStatus(event.currentTarget);\n  };\n\n  // func for change value name note onChange\n  const handleOnChange = (event) => {\n    editNote(\"name\", event.target.value);\n  };\n\n  // deactive input status on Blur\n  const handleOnBlur = () => {\n    editNote(\"inputStatus\", true);\n  };\n\n  return (\n    <div className={classes.root}>\n      <ListItem\n        button\n        onDoubleClick={widthLimit ? openContextMenu : handleOpenModal}\n        selected={noteId === id}\n        onClick={handleListItemClick}\n      >\n        <div className={classes.notesFieldsPosition}>\n          <ListItemText\n            primary={\n              <TextField\n                id={id}\n                className={classes.rootInput}\n                value={name}\n                onChange={handleOnChange}\n                onBlur={handleOnBlur}\n                InputProps={{\n                  disableUnderline: inputStatus,\n                  disabled: inputStatus,\n                  autoFocus: true,\n                }}\n              />\n            }\n          />\n          <div>{date}</div>\n        </div>\n        <Hidden mdUp>\n          <IconButton onClick={openContextMenu}>\n            <MoreHorizIcon />\n          </IconButton>\n        </Hidden>\n      </ListItem>\n      <NotesModal open={open} setOpen={setOpen} />\n      <ContextMenu\n        name={\"note\"}\n        menuStatus={menuStatus}\n        setMenuStatus={setMenuStatus}\n        addItem={addNote}\n        deleteItem={deleteNote}\n        clearId={setNoteId}\n        changeInputStatus={editNote}\n        folderId={folderId}\n      />\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotesListItem);\n\nNotesListItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  date: PropTypes.string,\n  inputStatus: PropTypes.bool,\n  addNotes: PropTypes.func,\n  notesList: PropTypes.array.isRequired,\n  setNoteId: PropTypes.func.isRequired,\n  noteId: PropTypes.string,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport { connect } from \"react-redux\";\nimport FolderListItem from \"./folderListItem\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport AddFolderButton from \"./addFolderButton.js\";\nimport Paper from \"@material-ui/core/Paper\";\nimport NotesListItem from \"../NotesList/notesListItem\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    \"& > *\": {\n      display: \"flex\",\n      height: \"95vh\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\",\n      backgroundColor: \"#f7f6f7\",\n      [theme.breakpoints.down(\"sm\")]: {\n        height: \"100vh\",\n      },\n    },\n  },\n  folderListWrapper: {\n    overflow: \"auto\",\n    backgroundColor: \"none\",\n  },\n}));\n\nconst mapStateToProps = (store) => {\n  const { foldersList } = store.folder;\n  const { notesList } = store.notes;\n  return {\n    foldersList,\n    notesList,\n  };\n};\n\nfunction FolderList(props) {\n  const classes = useStyles();\n  const { foldersList, notesList } = props;\n\n  return (\n    <div className={classes.root}>\n      <Paper variant=\"outlined\" square>\n        <div className={classes.folderListWrapper}>\n          <Droppable droppableId=\"droppableFolder\" isCombineEnabled>\n            {(provided) => (\n              <List component=\"nav\" {...provided.droppableProps} ref={provided.innerRef}>\n                {foldersList.map((folderItem, index) => (\n                  <Draggable\n                    index={index}\n                    draggableId={folderItem.id}\n                    key={folderItem.id}\n                    isDragDisabled\n                  >\n                    {(provided) => (\n                      <div ref={provided.innerRef} {...provided.dragHandleProps}>\n                        <FolderListItem item={folderItem} />\n                        <Hidden mdUp>\n                          {notesList\n                            .filter((noteItem) => noteItem.folderId === folderItem.id)\n                            .map((NoteItem) => (\n                              <NotesListItem key={NoteItem.id} item={NoteItem} />\n                            ))}\n                        </Hidden>\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </List>\n            )}\n          </Droppable>\n        </div>\n        <AddFolderButton />\n      </Paper>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps)(FolderList);\n\nFolderList.propTypes = {\n  foldersList: PropTypes.array.isRequired,\n  notesList: PropTypes.array.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport { connect } from \"react-redux\";\nimport NotesListItem from \"./notesListItem\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    \"& > *\": {\n      display: \"flex\",\n      height: \"95vh\",\n      flexDirection: \"column\",\n      backgroundColor: \"#f7f6f7\",\n    },\n  },\n  noteListWrapper: {\n    overflow: \"auto\",\n    backgroundColor: \"none\",\n    \"& > *\": {\n      padding: \"0px\",\n      width: \"100%\",\n    },\n  },\n}));\n\nconst mapStateToProps = (store) => {\n  const { notesList } = store.notes;\n  const { folderId } = store.folder;\n  return {\n    notesList,\n    folderId,\n  };\n};\n\nfunction NoteList(props) {\n  const classes = useStyles();\n  const { notesList, folderId } = props;\n\n  return (\n    <div className={classes.root}>\n      <Paper variant=\"outlined\" square>\n        <div className={classes.noteListWrapper}>\n          <Droppable droppableId=\"droppable\">\n            {(provided) => (\n              <List component=\"nav\" {...provided.droppableProps} ref={provided.innerRef}>\n                {notesList\n                  .filter((item) => item.folderId === folderId)\n                  .map((item, index) => (\n                    <Draggable index={index} draggableId={item.id} key={item.id}>\n                      {(provided, snapshot) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          style={{\n                            ...provided.draggableProps.style,\n                            backgroundColor: snapshot.isDragging\n                              ? \"#fde46e\"\n                              : \"transparent\",\n                          }}\n                        >\n                          <NotesListItem item={item} />\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                {provided.placeholder}\n              </List>\n            )}\n          </Droppable>\n        </div>\n      </Paper>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps)(NoteList);\n\nNoteList.propTypes = {\n  notesList: PropTypes.array.isRequired,\n  folderId: PropTypes.string,\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    \"& > *\": {\n      height: \"10px\",\n      width: \"10px\",\n      borderRadius: \"10px\",\n      margin: \"7px 0px 0px 5px\",\n    },\n  },\n  redButton: { backgroundColor: \"#fd5a52\", },\n  yellowButton: { backgroundColor: \"#fdbb3f\", },\n  greenButton: { backgroundColor: \"#31c747\", },\n}));\n\nexport default function ClosingMenu() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.redButton}></div>\n      <div className={classes.yellowButton}></div>\n      <div className={classes.greenButton}></div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  addNote,\n  setNoteId,\n  deleteNote,\n  ClearUnusedNotes,\n} from \"../../redux/actions/notesActions\";\nimport { deleteFolder, setFolderId } from \"../../redux/actions/folderActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ViewCompactOutlinedIcon from \"@material-ui/icons/ViewCompactOutlined\";\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\nimport NoteAddOutlinedIcon from \"@material-ui/icons/NoteAddOutlined\";\nimport { bindActionCreators } from \"redux\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    marginLeft: \"30%\",\n    \"& > *\": {\n      marginLeft: \"15px\",\n      marginTop: \"5px\",\n      padding: \"0px\",\n      width: \"40px\",\n      height: \"20px\",\n      borderRadius: \"3px\",\n      backgroundColor: \"#f5f5f5\",\n      boxShadow: \"0 5px 4px -4px rgba(0, 0, 0, .2) \",\n    },\n  },\n}));\n\nconst mapStateToProps = (store) => {\n  const { noteId } = store.notes;\n  const { folderId } = store.folder;\n\n  return {\n    noteId,\n    folderId,\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators(\n      { addNote, deleteFolder, deleteNote, setFolderId, setNoteId, ClearUnusedNotes },\n      dispatch\n    ),\n  };\n}\n\nfunction ButtonsBlock(props) {\n  const classes = useStyles();\n  const {\n    folderListVisibility,\n    setFolderListVisibility,\n    ClearUnusedNotes,\n    deleteFolder,\n    deleteNote,\n    folderId,\n    addNote,\n    setNoteId,\n    noteId,\n    setFolderId,\n  } = props;\n\n  // func for close/open folder list\n  const changeVisibilityFolderList = () => {\n    if (folderListVisibility) {\n      return setFolderListVisibility(false);\n    }\n    return setFolderListVisibility(true);\n  };\n\n  // func for add new notes from folder\n  const addNoteButton = () => {\n    if (folderId) {\n      addNote(folderId);\n    }\n  };\n\n  // func for remove active element folder/note\n  const removeActiveElement = () => {\n    if (!noteId) {\n      console.log(folderId);\n      ClearUnusedNotes(folderId);\n      deleteFolder();\n      setFolderId(undefined);\n    } else {\n      deleteNote();\n      setNoteId(undefined);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={changeVisibilityFolderList}>\n        <ViewCompactOutlinedIcon fontSize=\"small\" />\n      </IconButton>\n      <IconButton onClick={removeActiveElement}>\n        <DeleteOutlineOutlinedIcon fontSize=\"small\" />\n      </IconButton>\n      <IconButton onClick={addNoteButton}>\n        <NoteAddOutlinedIcon fontSize=\"small\" />\n      </IconButton>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonsBlock);\n\nButtonsBlock.propTypes = {\n  noteId: PropTypes.string,\n  folderId: PropTypes.string,\n  addNote: PropTypes.func.isRequired,\n  deleteFolder: PropTypes.func.isRequired,\n  deleteNote: PropTypes.func.isRequired,\n  ClearUnusedNotes: PropTypes.func.isRequired,\n  setNoteId: PropTypes.func.isRequired,\n  setFolderId: PropTypes.func.isRequired,\n  folderListVisibility: PropTypes.bool.isRequired,\n  setFolderListVisibility: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ClosingMenu from \"./closingMenu\";\nimport ButtonsBlock from \"./buttonsBlock\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    height: \"30px\",\n    backgroundColor: \"#e1dee1\",\n    borderTopLeftRadius: \"5px\",\n    borderTopRightRadius: \"5px\",\n    boxShadow: \"0 0 5px white inset\",\n    display: \"flex\",\n  },\n}));\n\nexport default function Header(props) {\n  const classes = useStyles();\n  const { folderListVisibility, setFolderListVisibility } = props;\n\n  return (\n    <div className={classes.root}>\n      <ClosingMenu />\n      <ButtonsBlock\n        folderListVisibility={folderListVisibility}\n        setFolderListVisibility={setFolderListVisibility}\n      />\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  folderListVisibility: PropTypes.bool.isRequired,\n  setFolderListVisibility: PropTypes.func.isRequired,\n};\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FolderList from \"./components/FoldersList/index\";\nimport NoteList from \"./components/NotesList/index\";\nimport NoteText from \"./components/Note/index\";\nimport Header from \"./components/Header/index\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { editNote, setNoteId, moveNotes } from \"./redux/actions/notesActions\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport { bindActionCreators } from \"redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  header: { display: \"flex\" },\n  main: { display: \"flex\", height: \"95vh\" },\n  folderList: {\n    flex: \"0 25%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flex: \"0 100%\",\n    },\n  },\n  notesList: { flex: \"0 25%\" },\n  note: { flex: \"1 50%\" },\n}));\n\nconst mapStateToProps = (store) => {\n  const { notesList, noteId } = store.notes;\n  const { folderId } = store.folder;\n  return {\n    notesList,\n    noteId,\n    folderId,\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators({ editNote, setNoteId, moveNotes }, dispatch),\n  };\n}\n\nfunction App(props) {\n  const { editNote, setNoteId, notesList, folderId, moveNotes } = props;\n  const [folderListVisibility, setfolderListVisibility] = useState(true);\n  const classes = useStyles();\n\n  // func for change folder id from note when DRAG ended\n  const handleOnDragEnd = (result) => {\n    const { combine } = result;\n    const items = notesList.filter((item) => item.folderId === folderId);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    if (combine) {\n      editNote(\"folderId\", combine.draggableId);\n      setNoteId(undefined);\n    } else if (result.destination) {\n      items.splice(result.destination.index, 0, reorderedItem);\n      moveNotes(items, folderId);\n    }\n  };\n\n  const handleOnDragStart = (result) => {\n    const { draggableId } = result;\n    setNoteId(draggableId);\n  };\n\n  return (\n    <DragDropContext onDragEnd={handleOnDragEnd} onDragStart={handleOnDragStart}>\n      <div className={classes.root}>\n        <Hidden smDown>\n          <div className={classes.header}>\n            <Header\n              folderListVisibility={folderListVisibility}\n              setFolderListVisibility={setfolderListVisibility}\n            />\n          </div>\n        </Hidden>\n        <div className={classes.main}>\n          <div\n            className={classes.folderList}\n            style={{ display: folderListVisibility ? \"block\" : \"none\" }}\n          >\n            <FolderList />\n          </div>\n          <Hidden smDown>\n            <div className={classes.notesList}>\n              <NoteList />\n            </div>\n            <div className={classes.note}>\n              <NoteText />\n            </div>\n          </Hidden>\n        </div>\n      </div>\n    </DragDropContext>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nApp.propTypes = {\n  editNote: PropTypes.func.isRequired,\n  setNoteId: PropTypes.func.isRequired,\n  folderId: PropTypes.string,\n  notesList: PropTypes.array.isRequired,\n};\n","import { uid } from \"uid\";\r\nimport {\r\n  ADD_FOLDER,\r\n  SET_FOLDER_ID,\r\n  DELETE_FOLDER,\r\n  EDIT_FOLDER,\r\n} from \"../actions/folderActions\";\r\n\r\nconst initialState = {\r\n  foldersList: JSON.parse(localStorage.getItem(\"arrFolders\")) || [],\r\n  folderId: undefined,\r\n};\r\n\r\nexport function folderReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_FOLDER:\r\n      const newFolder = {\r\n        id: uid(),\r\n        name: \"New Folder\",\r\n        inputStatus: true,\r\n      };\r\n      localStorage.setItem(\r\n        \"arrFolders\",\r\n        JSON.stringify([...state.foldersList, newFolder])\r\n      );\r\n      return { ...state, foldersList: [...state.foldersList, newFolder] };\r\n\r\n    case SET_FOLDER_ID:\r\n      return { ...state, folderId: action.payload };\r\n\r\n    case DELETE_FOLDER:\r\n      const changedFolderList = state.foldersList.filter(\r\n        (item) => item.id !== state.folderId\r\n      );\r\n      localStorage.setItem(\"arrFolders\", JSON.stringify(changedFolderList));\r\n      return { ...state, foldersList: changedFolderList };\r\n\r\n    case EDIT_FOLDER:\r\n      const changeFolderList = state.foldersList.map((item) => {\r\n        if (item.id === state.folderId) {\r\n          return { ...item, [action.fieldName]: action.payload };\r\n        }\r\n        return item;\r\n      });\r\n      localStorage.setItem(\"arrFolders\", JSON.stringify(changeFolderList));\r\n      return { ...state, foldersList: changeFolderList };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { uid } from \"uid\";\nimport moment from \"moment\";\nimport {\n  ADD_NOTE,\n  SET_NOTE_ID,\n  DELETE_NOTE,\n  EDIT_NOTE,\n  CLEAR_UNUSED_NOTES,\n  MOVE_NOTES,\n} from \"../actions/notesActions\";\n\nconst initialState = {\n  notesList: JSON.parse(localStorage.getItem(\"arrNotes\")) || [],\n  noteId: undefined,\n};\n\nexport function notesReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_NOTE:\n      const newNote = {\n        id: uid(),\n        folderId: action.payload,\n        name: \"New Note\",\n        inputStatus: true,\n        date: moment().format(\"L\"),\n        dateNote: moment().format(\"LLLL\"),\n      };\n      localStorage.setItem(\"arrNotes\", JSON.stringify([...state.notesList, newNote]));\n      return { ...state, notesList: [...state.notesList, newNote] };\n\n    case SET_NOTE_ID:\n      return { ...state, noteId: action.payload };\n\n    case DELETE_NOTE:\n      const changedNoteList = state.notesList.filter((item) => item.id !== state.noteId);\n      localStorage.setItem(\"arrNotes\", JSON.stringify(changedNoteList));\n      return { ...state, notesList: changedNoteList };\n\n    case MOVE_NOTES:\n      const editedNotesList = state.notesList\n        .filter((item) => item.folderId !== action.id)\n        .concat(action.payload);\n      localStorage.setItem(\"arrNotes\", JSON.stringify(editedNotesList));\n      return { ...state, notesList: editedNotesList };\n\n    case CLEAR_UNUSED_NOTES:\n      const clearedNoteList = state.notesList.filter(\n        (item) => item.folderId !== action.payload\n      );\n      localStorage.setItem(\"arrNotes\", JSON.stringify(clearedNoteList));\n      return { ...state, notesList: clearedNoteList };\n\n    case EDIT_NOTE:\n      const changeNoteList = state.notesList.map((item) => {\n        if (item.id === state.noteId) {\n          return { ...item, [action.fieldName]: action.payload };\n        }\n        return item;\n      });\n      localStorage.setItem(\"arrNotes\", JSON.stringify(changeNoteList));\n      return { ...state, notesList: changeNoteList };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux'\nimport { folderReducer } from './folderReducer'\nimport { notesReducer } from './notesReducer'\n\nexport const rootReducer = combineReducers({\n  folder: folderReducer,\n  notes: notesReducer\n})\n","import { createStore } from \"redux\";\nimport { rootReducer } from \"../reducersFolder/index\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\n\nexport const store = createStore(rootReducer, devToolsEnhancer());\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/storeFolder/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
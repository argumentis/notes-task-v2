{"version":3,"sources":["components/ContextMenu/index.js","redux/actions/folderActions.js","redux/actions/notesActions.js","components/FoldersList/folderListItem.js","components/FoldersList/addFolderButton.js","components/Note/noteTime.js","components/Note/noteTextArea.js","components/Note/index.js","components/Modal/index.js","components/NotesList/notesListItem.js","components/FoldersList/index.js","components/NotesList/index.js","components/Header/closingMenu.js","components/Header/buttonsBlock.js","components/Header/index.js","App.js","redux/reducersFolder/folderReducer.js","redux/reducersFolder/notesReducer.js","redux/reducersFolder/index.js","redux/storeFolder/store.js","index.js"],"names":["useStyles","makeStyles","theme","root","cursor","ContextMenu","props","classes","useTheme","widthLimit","useMediaQuery","breakpoints","up","name","folderId","addItem","deleteItem","clearId","ClearUnusedNotes","menuStatus","setMenuStatus","changeInputStatus","handleClose","className","Menu","id","anchorEl","keepMounted","open","Boolean","onClose","MenuItem","onClick","undefined","ADD_FOLDER","DELETE_FOLDER","SET_FOLDER_ID","EDIT_FOLDER","addFolder","type","deleteFolder","editFolder","value","payload","fieldName","setFolderId","ADD_NOTE","DELETE_NOTE","SET_NOTE_ID","EDIT_NOTE","CLEAR_UNUSED_NOTES","MOVE_NOTES","addNote","activeFolderId","deleteNote","editNote","setNoteId","noteId","moveNotes","selectedNotes","height","down","backgroundColor","inputStyle","display","color","connect","store","folder","notes","dispatch","bindActionCreators","item","inputStatus","useState","openContextMenu","event","currentTarget","ListItem","button","onDoubleClick","selected","ListItemText","primary","TextField","defaultValue","onChange","target","onBlur","InputProps","disableUnderline","disabled","autoFocus","Hidden","mdUp","IconButton","textTransform","fontWeight","width","justifyContent","paddingLeft","foldersList","buttonStyle","Button","startIcon","timeStyle","marginTop","NoteTime","itemTime","textAreaStyle","border","resize","outline","flexDirection","notesList","Paper","variant","square","filter","map","dateNote","noteValue","position","NotesModal","setOpen","Modal","Note","paddingRight","rootInput","notesFieldsPosition","alignItems","initialState","date","state","setState","handleOpenModal","folderListWrapper","overflow","droppableId","isCombineEnabled","provided","List","component","droppableProps","ref","innerRef","folderItem","index","draggableId","isDragDisabled","dragHandleProps","noteItem","NoteItem","placeholder","noteItemIsDrag","noteListWrapper","padding","snapshot","draggableProps","classNames","isDragging","borderRadius","margin","redButton","yellowButton","greenButton","ClosingMenu","marginLeft","boxShadow","folderListVisibility","setFolderListVisibility","fontSize","console","log","borderTopLeftRadius","borderTopRightRadius","Header","header","main","folderList","flex","folderListHide","note","setfolderListVisibility","onDragEnd","result","combine","notesListActiveFolder","splice","source","reorderedItem","destination","onDragStart","smDown","JSON","parse","localStorage","getItem","rootReducer","combineReducers","action","newFolder","uid","setItem","stringify","changedFolderList","changeFolderList","newNote","moment","format","changedNoteList","editedNotesList","concat","clearedNoteList","changeNoteList","createStore","devToolsEnhancer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2328531b.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    cursor: \"context-menu\",\n  },\n}));\n\nexport default function ContextMenu(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const widthLimit = useMediaQuery(theme.breakpoints.up(\"md\"));\n  const {\n    name,\n    folderId,\n    addItem,\n    deleteItem,\n    clearId,\n    ClearUnusedNotes,\n    menuStatus,\n    setMenuStatus,\n    changeInputStatus,\n  } = props;\n\n  // func for close context menu\n  const handleClose = () => {\n    setMenuStatus(null);\n  };\n\n  // func for push new item to array\n  const addItemButton = () => {\n    addItem(folderId);\n    handleClose();\n  };\n\n  // func make input active\n  const makeInputActive = () => {\n    handleClose();\n    changeInputStatus(\"inputStatus\", false);\n  };\n\n  // func for delete item from array\n  const removeitemButton = () => {\n    if (name === \"folder\") ClearUnusedNotes(folderId);\n    deleteItem();\n    clearId(undefined);\n    handleClose();\n  };\n\n  return (\n    <div className={classes.root}>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={menuStatus}\n        keepMounted\n        open={Boolean(menuStatus)}\n        onClose={handleClose}\n      >\n        {name === \"note\" && !widthLimit ? null : (\n          <MenuItem onClick={addItemButton}>\n            {`Add ${widthLimit ? name : \"note\"}`}\n          </MenuItem>\n        )}\n        <MenuItem onClick={makeInputActive}>{`Rename ${name}`}</MenuItem>\n        <MenuItem onClick={removeitemButton}>{`Delete ${name}`}</MenuItem>\n      </Menu>\n    </div>\n  );\n}\n\nContextMenu.propTypes = {\n  name: PropTypes.string,\n  folderId: PropTypes.string,\n  ClearUnusedNotes: PropTypes.func,\n  addItem: PropTypes.func.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n  changeInputStatus: PropTypes.func.isRequired,\n  clearId: PropTypes.func.isRequired,\n  setMenuStatus: PropTypes.func.isRequired,\n  menuStatus: PropTypes.object,\n};\n","export const ADD_FOLDER = \"ADD_FOLDER\";\r\nexport const DELETE_FOLDER = \"DELETE_FOLDER\";\r\nexport const SET_FOLDER_ID = \"SET_FOLDER_ID\";\r\nexport const EDIT_FOLDER = \"EDIT_FOLDER\";\r\n\r\nexport function addFolder() {\r\n  return {\r\n    type: \"ADD_FOLDER\",\r\n  };\r\n}\r\n\r\nexport function deleteFolder() {\r\n  return {\r\n    type: \"DELETE_FOLDER\",\r\n  };\r\n}\r\n\r\nexport function editFolder(name, value) {\r\n  return {\r\n    type: \"EDIT_FOLDER\",\r\n    payload: value,\r\n    fieldName: name,\r\n  };\r\n}\r\n\r\nexport function setFolderId(folderId) {\r\n  return {\r\n    type: \"SET_FOLDER_ID\",\r\n    payload: folderId,\r\n  };\r\n}\r\n","export const ADD_NOTE = \"ADD_NOTE\";\r\nexport const DELETE_NOTE = \"DELETE_NOTE\";\r\nexport const SET_NOTE_ID = \"SET_NOTE_ID\";\r\nexport const EDIT_NOTE = \"EDIT_NOTE\";\r\nexport const CLEAR_UNUSED_NOTES = \"CLEAR_UNUSED_NOTES\";\r\nexport const MOVE_NOTES = \"MOVE_NOTES\";\r\n\r\nexport function addNote(activeFolderId) {\r\n  return {\r\n    type: \"ADD_NOTE\",\r\n    payload: activeFolderId,\r\n  };\r\n}\r\n\r\nexport function deleteNote() {\r\n  return {\r\n    type: \"DELETE_NOTE\",\r\n  };\r\n}\r\n\r\nexport function editNote(name, value) {\r\n  return {\r\n    type: \"EDIT_NOTE\",\r\n    payload: value,\r\n    fieldName: name,\r\n  };\r\n}\r\n\r\nexport function setNoteId(noteId) {\r\n  return {\r\n    type: \"SET_NOTE_ID\",\r\n    payload: noteId,\r\n  };\r\n}\r\n\r\nexport function ClearUnusedNotes(folderId) {\r\n  return {\r\n    type: \"CLEAR_UNUSED_NOTES\",\r\n    payload: folderId,\r\n  };\r\n}\r\n\r\nexport function moveNotes(selectedNotes, folderId) {\r\n  return {\r\n    type: \"MOVE_NOTES\",\r\n    id: folderId,\r\n    payload: selectedNotes,\r\n  };\r\n}\r\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ContextMenu from \"../ContextMenu/index\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport {\n  addFolder,\n  deleteFolder,\n  setFolderId,\n  editFolder,\n} from \"../../redux/actions/folderActions\";\nimport { setNoteId, addNote, ClearUnusedNotes } from \"../../redux/actions/notesActions\";\nimport { bindActionCreators } from \"redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiListItem-root\": {\n      height: \"40px\",\n      [theme.breakpoints.down(\"sm\")]: {\n        backgroundColor: \"#cccccc\",\n        height: \"60px\",\n      },\n    },\n  },\n  inputStyle: {\n    display: \"flex\",\n    \"& .Mui-focused\": {\n      backgroundColor: \"#f7f6f7\",\n    },\n    \"& .Mui-disabled\": {\n      color: \"black\",\n    },\n  },\n}));\n\nconst mapStateToProps = (store) => {\n  const { folderId } = store.folder;\n  const { noteId } = store.notes;\n  return {\n    folderId,\n    noteId,\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators(\n      {\n        addFolder,\n        deleteFolder,\n        editFolder,\n        setFolderId,\n        setNoteId,\n        addNote,\n        ClearUnusedNotes,\n      },\n      dispatch\n    ),\n  };\n}\n\nfunction FolderListItem(props) {\n  const classes = useStyles();\n  const {\n    folderId,\n    noteId,\n    item,\n    setFolderId,\n    setNoteId,\n    addFolder,\n    addNote,\n    ClearUnusedNotes,\n    deleteFolder,\n    editFolder,\n  } = props;\n  const { id, name, inputStatus } = item;\n  const [menuStatus, setMenuStatus] = useState(null);\n  const theme = useTheme();\n  const widthLimit = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n  // func for set selected folder\n  const handleListItemClick = () => {\n    if (folderId !== id) {\n      setFolderId(id);\n    }\n    if (noteId !== undefined) {\n      setNoteId(undefined);\n    }\n  };\n\n  // func for set menu status\n  const openContextMenu = (event) => {\n    setMenuStatus(event.currentTarget);\n  };\n  // change item name\n  const handleOnChange = (event) => {\n    editFolder(\"name\", event.target.value);\n  };\n  // deactive input status on Blur\n  const handleOnBlur = () => {\n    editFolder(\"inputStatus\", true);\n  };\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <ListItem\n          button\n          onDoubleClick={widthLimit ? openContextMenu : null}\n          selected={folderId === id}\n          onClick={handleListItemClick}\n        >\n          <ListItemText\n            primary={\n              <TextField\n                id={id}\n                className={classes.inputStyle}\n                defaultValue={name}\n                onChange={handleOnChange}\n                onBlur={handleOnBlur}\n                InputProps={{\n                  disableUnderline: inputStatus,\n                  disabled: inputStatus,\n                  autoFocus: true,\n                }}\n              />\n            }\n          />\n          <Hidden mdUp>\n            <IconButton onClick={openContextMenu}>\n              <MoreHorizIcon />\n            </IconButton>\n          </Hidden>\n        </ListItem>\n      </div>\n      <ContextMenu\n        name={\"folder\"}\n        menuStatus={menuStatus}\n        setMenuStatus={setMenuStatus}\n        folderId={folderId}\n        addItem={widthLimit ? addFolder : addNote}\n        deleteItem={deleteFolder}\n        clearId={setFolderId}\n        ClearUnusedNotes={ClearUnusedNotes}\n        changeInputStatus={editFolder}\n      />\n    </div>\n  );\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(FolderListItem);\n\nFolderListItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  inputStatus: PropTypes.bool,\n  setFolderId: PropTypes.func.isRequired,\n  setNoteId: PropTypes.func.isRequired,\n  editFolder: PropTypes.func.isRequired,\n  folderId: PropTypes.string,\n  noteId: PropTypes.string,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport { addFolder } from \"../../redux/actions/folderActions\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    textTransform: \"none\",\n    fontWeight: \"bold\",\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    paddingLeft: \"15px\",\n  },\n}));\n\nconst mapStateToProps = (store) => {\n  const { foldersList } = store.folder;\n  return {\n    foldersList,\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators({ addFolder }, dispatch),\n  };\n}\n\nfunction AddFolderButton(props) {\n  const classes = useStyles();\n  const { addFolder } = props;\n\n  // func for add folder to array\n  const handleButtonClick = () => {\n    addFolder();\n  };\n\n  return (\n    <div className={classes.buttonStyle}>\n      <Button\n        className={classes.root}\n        startIcon={<AddCircleOutlineIcon />}\n        onClick={handleButtonClick}\n      >\n        New Folder\n      </Button>\n    </div>\n  );\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AddFolderButton);\n\nAddFolderButton.propTypes = {\n  addFolder: PropTypes.func.isRequired,\n};\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\n\nconst useStyles = makeStyles(() => ({\n  timeStyle: {\n    display: 'flex',\n    justifyContent: 'center',\n    color: '#bababa',\n    marginTop: '20px'\n  }\n}))\n\nexport default function NoteTime (props) {\n  const classes = useStyles()\n  const { itemTime } = props\n\n  return (\n    <div className={classes.timeStyle}>\n      {itemTime}\n    </div>\n  )\n}\n\nNoteTime.propTypes = {\n  itemTime: PropTypes.string.isRequired\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { editNote } from \"../../redux/actions/notesActions\";\nimport { bindActionCreators } from \"redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  textAreaStyle: {\n    width: \"99%\",\n    border: \"0px\",\n    height: \"85vh\",\n    resize: \"none\",\n    outline: \"none\",\n    backgroundColor: \"#f7f6f7\",\n    marginTop: \"20px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"80vh\",\n    },\n  },\n}));\n\nconst mapStateToProps = (store) => {\n  const { noteId } = store.notes;\n\n  return {\n    noteId,\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators({ editNote }, dispatch),\n  };\n}\n\nfunction NoteTextArea(props) {\n  const classes = useStyles();\n  const { editNote, defaultValue } = props;\n\n  // func for change note value onChange\n  const handleOnlChange = (event) => {\n    editNote(\"noteValue\", event.target.value);\n  };\n\n  return (\n    <div>\n      <textarea\n        className={classes.textAreaStyle}\n        defaultValue={defaultValue}\n        onChange={handleOnlChange}\n      />\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteTextArea);\n\nNoteTextArea.propTypes = {\n  noteId: PropTypes.string,\n  editNote: PropTypes.func.isRequired,\n  defaultValue: PropTypes.string,\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport NoteTime from \"./noteTime\";\nimport NoteTextArea from \"./noteTextArea\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    \"& > *\": {\n      display: \"flex\",\n      height: \"95vh\",\n      flexDirection: \"column\",\n      backgroundColor: \"#f7f6f7\",\n    },\n  },\n}));\n\nconst mapStateToProps = (store) => {\n  const { noteId, notesList } = store.notes;\n\n  return {\n    noteId,\n    notesList,\n  };\n};\n\nfunction NoteText(props) {\n  const classes = useStyles();\n  const { noteId, notesList } = props;\n\n  return (\n    <div className={classes.root}>\n      <Paper variant=\"outlined\" square>\n        {notesList\n          .filter((item) => item.id === noteId)\n          .map((item) => (\n            <div key={item.id}>\n              <NoteTime itemTime={item.dateNote} />\n              <NoteTextArea defaultValue={item.noteValue} />\n            </div>\n          ))}\n      </Paper>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps)(NoteText);\n\nNoteText.propTypes = {\n  noteId: PropTypes.string,\n  notesList: PropTypes.array.isRequired,\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport PropTypes from \"prop-types\";\nimport NoteText from \"../Note/index\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"#f7f6f7\",\n  },\n  button: {\n    width: \"100%\",\n    color: \"#bababa\",\n    height: \"30px\",\n    textTransform: \"none\",\n  },\n}));\n\nexport default function NotesModal(props) {\n  const classes = useStyles();\n  const { setOpen, open } = props;\n\n  const handleClose = () => {\n    setOpen();\n  };\n\n  return (\n    <div>\n      <Modal open={open} onClose={setOpen}>\n        <div className={classes.root}>\n          <Button className={classes.button} onClick={handleClose}>\n            Save and Close\n          </Button>\n          <NoteText />\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nNotesModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ContextMenu from \"../ContextMenu/index\";\nimport NotesModal from \"../Modal/index\";\nimport { connect } from \"react-redux\";\nimport {\n  addNote,\n  setNoteId,\n  deleteNote,\n  editNote,\n} from \"../../redux/actions/notesActions\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport { bindActionCreators } from \"redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& .Mui-selected\": {\n      backgroundColor: \"#fde46e\",\n      [theme.breakpoints.down(\"sm\")]: {\n        backgroundColor: \"transparent\",\n      },\n    },\n    \"& .MuiListItemText-root\": {\n      width: \"100%\",\n    },\n    \"& .MuiListItem-root\": {\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\",\n      [theme.breakpoints.down(\"sm\")]: {\n        paddingLeft: \"16px\",\n        paddingRight: \"16px\",\n      },\n    },\n  },\n  rootInput: {\n    display: \"flex\",\n    \"& .Mui-focused\": {\n      backgroundColor: \"#f7f6f7\",\n    },\n    \"& .Mui-disabled\": {\n      color: \"black\",\n    },\n  },\n  notesFieldsPosition: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n    width: \"100%\",\n  },\n}));\n\nconst mapStateToProps = (store) => {\n  const { notesList, noteId } = store.notes;\n  const { folderId } = store.folder;\n  return {\n    notesList,\n    noteId,\n    folderId,\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators({ addNote, deleteNote, editNote, setNoteId }, dispatch),\n  };\n}\n\nconst initialState = {\n  open: false,\n  menuStatus: null,\n};\nfunction NotesListItem(props) {\n  const classes = useStyles();\n  const { noteId, folderId, setNoteId, editNote, addNote, deleteNote, item } = props;\n  const { id, name, inputStatus, date } = item;\n  const [state, setState] = useState(initialState);\n  const { open, menuStatus } = state;\n  const theme = useTheme();\n  const widthLimit = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n  // func for set status modal\n  const handleOpenModal = () => {\n    if (open) return setState({ ...state, open: false });\n    return setState({ ...state, open: true });\n  };\n\n  // func for set selected folder\n  const handleListItemClick = () => {\n    if (noteId !== id) {\n      setNoteId(id);\n    }\n  };\n\n  // func for set status context menu\n  const openContextMenu = (event) => {\n    setState({ ...state, menuStatus: event.currentTarget });\n  };\n\n  const closeContextMenu = (value) => {\n    setState({ ...state, menuStatus: value });\n  };\n\n  // func for change value name note onChange\n  const handleOnChange = (event) => {\n    editNote(\"name\", event.target.value);\n  };\n\n  // deactive input status on Blur\n  const handleOnBlur = () => {\n    editNote(\"inputStatus\", true);\n  };\n\n  return (\n    <div className={classes.root}>\n      <ListItem\n        button\n        onDoubleClick={widthLimit ? openContextMenu : handleOpenModal}\n        selected={noteId === id}\n        onClick={handleListItemClick}\n      >\n        <div className={classes.notesFieldsPosition}>\n          <ListItemText\n            primary={\n              <TextField\n                id={id}\n                className={classes.rootInput}\n                value={name}\n                onChange={handleOnChange}\n                onBlur={handleOnBlur}\n                InputProps={{\n                  disableUnderline: inputStatus,\n                  disabled: inputStatus,\n                  autoFocus: true,\n                }}\n              />\n            }\n          />\n          <div>{date}</div>\n        </div>\n        <Hidden mdUp>\n          <IconButton onClick={openContextMenu}>\n            <MoreHorizIcon />\n          </IconButton>\n        </Hidden>\n      </ListItem>\n      <NotesModal open={open} setOpen={handleOpenModal} />\n      <ContextMenu\n        name={\"note\"}\n        menuStatus={menuStatus}\n        setMenuStatus={closeContextMenu}\n        addItem={addNote}\n        deleteItem={deleteNote}\n        clearId={setNoteId}\n        changeInputStatus={editNote}\n        folderId={folderId}\n      />\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotesListItem);\n\nNotesListItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  date: PropTypes.string,\n  inputStatus: PropTypes.bool,\n  addNotes: PropTypes.func,\n  notesList: PropTypes.array.isRequired,\n  setNoteId: PropTypes.func.isRequired,\n  noteId: PropTypes.string,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport { connect } from \"react-redux\";\nimport FolderListItem from \"./folderListItem\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport AddFolderButton from \"./addFolderButton.js\";\nimport Paper from \"@material-ui/core/Paper\";\nimport NotesListItem from \"../NotesList/notesListItem\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    \"& > *\": {\n      display: \"flex\",\n      height: \"95vh\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\",\n      backgroundColor: \"#f7f6f7\",\n      [theme.breakpoints.down(\"sm\")]: {\n        height: \"100vh\",\n      },\n    },\n  },\n  folderListWrapper: {\n    overflow: \"auto\",\n    backgroundColor: \"none\",\n  },\n}));\n\nconst mapStateToProps = (store) => {\n  const { foldersList } = store.folder;\n  const { notesList } = store.notes;\n  return {\n    foldersList,\n    notesList,\n  };\n};\n\nfunction FolderList(props) {\n  const classes = useStyles();\n  const { foldersList, notesList } = props;\n\n  return (\n    <div className={classes.root}>\n      <Paper variant=\"outlined\" square>\n        <div className={classes.folderListWrapper}>\n          <Droppable droppableId=\"droppableFolder\" isCombineEnabled>\n            {(provided) => (\n              <List component=\"nav\" {...provided.droppableProps} ref={provided.innerRef}>\n                {foldersList.map((folderItem, index) => (\n                  <Draggable\n                    index={index}\n                    draggableId={folderItem.id}\n                    key={folderItem.id}\n                    isDragDisabled\n                  >\n                    {(provided) => (\n                      <div ref={provided.innerRef} {...provided.dragHandleProps}>\n                        <FolderListItem item={folderItem} />\n                        <Hidden mdUp>\n                          {notesList\n                            .filter((noteItem) => noteItem.folderId === folderItem.id)\n                            .map((NoteItem) => (\n                              <NotesListItem key={NoteItem.id} item={NoteItem} />\n                            ))}\n                        </Hidden>\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </List>\n            )}\n          </Droppable>\n        </div>\n        <AddFolderButton />\n      </Paper>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps)(FolderList);\n\nFolderList.propTypes = {\n  foldersList: PropTypes.array.isRequired,\n  notesList: PropTypes.array.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport { connect } from \"react-redux\";\nimport NotesListItem from \"./notesListItem\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport classNames from \"classnames\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    \"& > *\": {\n      display: \"flex\",\n      height: \"95vh\",\n      flexDirection: \"column\",\n      backgroundColor: \"#f7f6f7\",\n    },\n  },\n  noteItemIsDrag: {\n    backgroundColor: \"#fde46e\",\n  },\n  noteItem: {\n    backgroundColor: \"transparent\",\n  },\n  noteListWrapper: {\n    overflow: \"auto\",\n    backgroundColor: \"none\",\n    \"& > *\": {\n      padding: \"0px\",\n      width: \"100%\",\n    },\n  },\n}));\n\nconst mapStateToProps = (store) => {\n  const { notesList } = store.notes;\n  const { folderId } = store.folder;\n  return {\n    notesList,\n    folderId,\n  };\n};\n\nfunction NoteList(props) {\n  const classes = useStyles();\n  const { notesList, folderId } = props;\n\n  return (\n    <div className={classes.root}>\n      <Paper variant=\"outlined\" square>\n        <div className={classes.noteListWrapper}>\n          <Droppable droppableId=\"droppable\">\n            {(provided) => (\n              <List component=\"nav\" {...provided.droppableProps} ref={provided.innerRef}>\n                {notesList\n                  .filter((item) => item.folderId === folderId)\n                  .map((item, index) => (\n                    <Draggable index={index} draggableId={item.id} key={item.id}>\n                      {(provided, snapshot) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          className={classNames(classes.noteItem, {\n                            [classes.noteItemIsDrag]: snapshot.isDragging,\n                          })}\n                        >\n                          <NotesListItem item={item} />\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                {provided.placeholder}\n              </List>\n            )}\n          </Droppable>\n        </div>\n      </Paper>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps)(NoteList);\n\nNoteList.propTypes = {\n  notesList: PropTypes.array.isRequired,\n  folderId: PropTypes.string,\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    \"& > *\": {\n      height: \"10px\",\n      width: \"10px\",\n      borderRadius: \"10px\",\n      margin: \"7px 0px 0px 5px\",\n    },\n  },\n  redButton: {\n    backgroundColor: \"#fd5a52\",\n  },\n  yellowButton: {\n    backgroundColor: \"#fdbb3f\",\n  },\n  greenButton: {\n    backgroundColor: \"#31c747\",\n  },\n}));\n\nexport default function ClosingMenu() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.redButton}></div>\n      <div className={classes.yellowButton}></div>\n      <div className={classes.greenButton}></div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  addNote,\n  setNoteId,\n  deleteNote,\n  ClearUnusedNotes,\n} from \"../../redux/actions/notesActions\";\nimport { deleteFolder, setFolderId } from \"../../redux/actions/folderActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ViewCompactOutlinedIcon from \"@material-ui/icons/ViewCompactOutlined\";\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\nimport NoteAddOutlinedIcon from \"@material-ui/icons/NoteAddOutlined\";\nimport { bindActionCreators } from \"redux\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    marginLeft: \"30%\",\n    \"& > *\": {\n      marginLeft: \"15px\",\n      marginTop: \"5px\",\n      padding: \"0px\",\n      width: \"40px\",\n      height: \"20px\",\n      borderRadius: \"3px\",\n      backgroundColor: \"#f5f5f5\",\n      boxShadow: \"0 5px 4px -4px rgba(0, 0, 0, .2) \",\n    },\n  },\n}));\n\nconst mapStateToProps = (store) => {\n  const { noteId } = store.notes;\n  const { folderId } = store.folder;\n\n  return {\n    noteId,\n    folderId,\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators(\n      { addNote, deleteFolder, deleteNote, setFolderId, setNoteId, ClearUnusedNotes },\n      dispatch\n    ),\n  };\n}\n\nfunction ButtonsBlock(props) {\n  const classes = useStyles();\n  const {\n    folderListVisibility,\n    setFolderListVisibility,\n    ClearUnusedNotes,\n    deleteFolder,\n    deleteNote,\n    folderId,\n    addNote,\n    setNoteId,\n    noteId,\n    setFolderId,\n  } = props;\n\n  // func for close/open folder list\n  const changeVisibilityFolderList = () => {\n    if (folderListVisibility) {\n      return setFolderListVisibility(false);\n    }\n    return setFolderListVisibility(true);\n  };\n\n  // func for add new notes from folder\n  const addNoteButton = () => {\n    if (folderId) {\n      addNote(folderId);\n    }\n  };\n\n  // func for remove active element folder/note\n  const removeActiveElement = () => {\n    if (!noteId) {\n      console.log(folderId);\n      ClearUnusedNotes(folderId);\n      deleteFolder();\n      setFolderId(undefined);\n    } else {\n      deleteNote();\n      setNoteId(undefined);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={changeVisibilityFolderList}>\n        <ViewCompactOutlinedIcon fontSize=\"small\" />\n      </IconButton>\n      <IconButton onClick={removeActiveElement}>\n        <DeleteOutlineOutlinedIcon fontSize=\"small\" />\n      </IconButton>\n      <IconButton onClick={addNoteButton}>\n        <NoteAddOutlinedIcon fontSize=\"small\" />\n      </IconButton>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonsBlock);\n\nButtonsBlock.propTypes = {\n  noteId: PropTypes.string,\n  folderId: PropTypes.string,\n  addNote: PropTypes.func.isRequired,\n  deleteFolder: PropTypes.func.isRequired,\n  deleteNote: PropTypes.func.isRequired,\n  ClearUnusedNotes: PropTypes.func.isRequired,\n  setNoteId: PropTypes.func.isRequired,\n  setFolderId: PropTypes.func.isRequired,\n  folderListVisibility: PropTypes.bool.isRequired,\n  setFolderListVisibility: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ClosingMenu from \"./closingMenu\";\nimport ButtonsBlock from \"./buttonsBlock\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    height: \"30px\",\n    backgroundColor: \"#e1dee1\",\n    borderTopLeftRadius: \"5px\",\n    borderTopRightRadius: \"5px\",\n    boxShadow: \"0 0 5px white inset\",\n    display: \"flex\",\n  },\n}));\n\nexport default function Header(props) {\n  const classes = useStyles();\n  const { folderListVisibility, setFolderListVisibility } = props;\n\n  return (\n    <div className={classes.root}>\n      <ClosingMenu />\n      <ButtonsBlock\n        folderListVisibility={folderListVisibility}\n        setFolderListVisibility={setFolderListVisibility}\n      />\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  folderListVisibility: PropTypes.bool.isRequired,\n  setFolderListVisibility: PropTypes.func.isRequired,\n};\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FolderList from \"./components/FoldersList/index\";\nimport NoteList from \"./components/NotesList/index\";\nimport NoteText from \"./components/Note/index\";\nimport Header from \"./components/Header/index\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { editNote, setNoteId, moveNotes } from \"./redux/actions/notesActions\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport { bindActionCreators } from \"redux\";\nimport classNames from \"classnames\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  header: {\n    display: \"flex\",\n  },\n  main: {\n    display: \"flex\",\n    height: \"95vh\",\n  },\n  folderList: {\n    flex: \"0 25%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flex: \"0 100%\",\n    },\n  },\n  folderListHide: {\n    display: \"none\",\n  },\n  notesList: {\n    flex: \"0 25%\",\n  },\n  note: {\n    flex: \"1 50%\",\n  },\n}));\n\nconst mapStateToProps = (store) => {\n  const { notesList, noteId } = store.notes;\n  const { folderId } = store.folder;\n  return {\n    notesList,\n    noteId,\n    folderId,\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators({ editNote, setNoteId, moveNotes }, dispatch),\n  };\n}\n\nfunction App(props) {\n  const { editNote, setNoteId, notesList, folderId, moveNotes } = props;\n  const [folderListVisibility, setfolderListVisibility] = useState(false);\n  const classes = useStyles();\n\n  // func for change folder id from note when DRAG ended\n  const handleOnDragEnd = (result) => {\n    const { combine } = result;\n    const notesListActiveFolder = notesList.filter((item) => item.folderId === folderId);\n    const [reorderedItem] = notesListActiveFolder.splice(result.source.index, 1);\n\n    if (combine) {\n      editNote(\"folderId\", combine.draggableId);\n      setNoteId(undefined);\n    } else if (result.destination) {\n      notesListActiveFolder.splice(result.destination.index, 0, reorderedItem);\n      moveNotes(notesListActiveFolder, folderId);\n    }\n  };\n\n  // func for change folder id from note when DRAG started\n  const handleOnDragStart = (result) => {\n    const { draggableId } = result;\n    setNoteId(draggableId);\n  };\n\n  return (\n    <DragDropContext onDragEnd={handleOnDragEnd} onDragStart={handleOnDragStart}>\n      <div className={classes.root}>\n        <Hidden smDown>\n          <div className={classes.header}>\n            <Header\n              folderListVisibility={folderListVisibility}\n              setFolderListVisibility={setfolderListVisibility}\n            />\n          </div>\n        </Hidden>\n        <div className={classes.main}>\n          <div\n            className={classNames(classes.folderList, {\n              [classes.folderListHide]: folderListVisibility,\n            })}\n          >\n            <FolderList />\n          </div>\n          <Hidden smDown>\n            <div className={classes.notesList}>\n              <NoteList />\n            </div>\n            <div className={classes.note}>\n              <NoteText />\n            </div>\n          </Hidden>\n        </div>\n      </div>\n    </DragDropContext>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nApp.propTypes = {\n  editNote: PropTypes.func.isRequired,\n  setNoteId: PropTypes.func.isRequired,\n  folderId: PropTypes.string,\n  notesList: PropTypes.array.isRequired,\n};\n","import { uid } from \"uid\";\r\nimport {\r\n  ADD_FOLDER,\r\n  SET_FOLDER_ID,\r\n  DELETE_FOLDER,\r\n  EDIT_FOLDER,\r\n} from \"../actions/folderActions\";\r\n\r\nconst initialState = {\r\n  foldersList: JSON.parse(localStorage.getItem(\"arrFolders\")) || [],\r\n  folderId: undefined,\r\n};\r\n\r\nexport function folderReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_FOLDER:\r\n      const newFolder = {\r\n        id: uid(),\r\n        name: \"New Folder\",\r\n        inputStatus: true,\r\n      };\r\n      localStorage.setItem(\r\n        \"arrFolders\",\r\n        JSON.stringify([...state.foldersList, newFolder])\r\n      );\r\n      return { ...state, foldersList: [...state.foldersList, newFolder] };\r\n\r\n    case SET_FOLDER_ID:\r\n      return { ...state, folderId: action.payload };\r\n\r\n    case DELETE_FOLDER:\r\n      const changedFolderList = state.foldersList.filter(\r\n        (item) => item.id !== state.folderId\r\n      );\r\n      localStorage.setItem(\"arrFolders\", JSON.stringify(changedFolderList));\r\n      return { ...state, foldersList: changedFolderList };\r\n\r\n    case EDIT_FOLDER:\r\n      const changeFolderList = state.foldersList.map((item) => {\r\n        if (item.id === state.folderId) {\r\n          return { ...item, [action.fieldName]: action.payload };\r\n        }\r\n        return item;\r\n      });\r\n      localStorage.setItem(\"arrFolders\", JSON.stringify(changeFolderList));\r\n      return { ...state, foldersList: changeFolderList };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { uid } from \"uid\";\nimport moment from \"moment\";\nimport {\n  ADD_NOTE,\n  SET_NOTE_ID,\n  DELETE_NOTE,\n  EDIT_NOTE,\n  CLEAR_UNUSED_NOTES,\n  MOVE_NOTES,\n} from \"../actions/notesActions\";\n\nconst initialState = {\n  notesList: JSON.parse(localStorage.getItem(\"arrNotes\")) || [],\n  noteId: undefined,\n};\n\nexport function notesReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_NOTE:\n      const newNote = {\n        id: uid(),\n        folderId: action.payload,\n        name: \"New Note\",\n        inputStatus: true,\n        date: moment().format(\"L\"),\n        dateNote: moment().format(\"LLLL\"),\n      };\n      localStorage.setItem(\"arrNotes\", JSON.stringify([...state.notesList, newNote]));\n      return { ...state, notesList: [...state.notesList, newNote] };\n\n    case SET_NOTE_ID:\n      return { ...state, noteId: action.payload };\n\n    case DELETE_NOTE:\n      const changedNoteList = state.notesList.filter((item) => item.id !== state.noteId);\n      localStorage.setItem(\"arrNotes\", JSON.stringify(changedNoteList));\n      return { ...state, notesList: changedNoteList };\n\n    case MOVE_NOTES:\n      const editedNotesList = state.notesList\n        .filter((item) => item.folderId !== action.id)\n        .concat(action.payload);\n      localStorage.setItem(\"arrNotes\", JSON.stringify(editedNotesList));\n      return { ...state, notesList: editedNotesList };\n\n    case CLEAR_UNUSED_NOTES:\n      const clearedNoteList = state.notesList.filter(\n        (item) => item.folderId !== action.payload\n      );\n      localStorage.setItem(\"arrNotes\", JSON.stringify(clearedNoteList));\n      return { ...state, notesList: clearedNoteList };\n\n    case EDIT_NOTE:\n      const changeNoteList = state.notesList.map((item) => {\n        if (item.id === state.noteId) {\n          return { ...item, [action.fieldName]: action.payload };\n        }\n        return item;\n      });\n      localStorage.setItem(\"arrNotes\", JSON.stringify(changeNoteList));\n      return { ...state, notesList: changeNoteList };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux'\nimport { folderReducer } from './folderReducer'\nimport { notesReducer } from './notesReducer'\n\nexport const rootReducer = combineReducers({\n  folder: folderReducer,\n  notes: notesReducer\n})\n","import { createStore } from \"redux\";\nimport { rootReducer } from \"../reducersFolder/index\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\n\nexport const store = createStore(rootReducer, devToolsEnhancer());\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/storeFolder/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}